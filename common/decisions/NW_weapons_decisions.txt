sell_weapons = {
	sell_infantry_weapons = {

		icon = generic_prepare_civil_war

		available = {
			has_equipment = { infantry_equipment > 500 }
		}
		
		days_re_enable = 30
		#fire_only_once = yes
	
		custom_cost_trigger = {
			set_temp_variable = { base_weapons_sell_cost = 25 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_sell_cost = threat_for_cost }
		}
		custom_cost_text = sell_weapons_cost
		
		#cost = 50
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = -500
			}
			add_political_power = base_weapons_sell_cost
			
			hidden_effect = {
				add_to_variable = {
					var = global.total_infantry_weapons
					value = 500
				}
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision sell_infantry_weapons // total_infantry_weapons = [?global.total_infantry_weapons]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = infantry_equipment
					ratio > 1
				}
			}
			modifier = {
				add = 50
				has_equipment = { infantry_equipment > 10000 }
			}
			modifier = {
				add = 1
				has_war = no
			}
			modifier = {
				add = 15
				has_political_power < 0
				stockpile_ratio = {
					archetype = infantry_equipment
					ratio > 0.5
				}
			}
			modifier = {
				factor = 0
				has_political_power > 300
			}
			modifier = {
				factor = 0
				has_equipment = { infantry_equipment < 1000 }
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = infantry_equipment
					ratio < 0.9
				}
			}
		}
	}
	
	sell_artillery = {

		icon = generic_ignite_civil_war

		available = {
			has_equipment = { artillery_equipment > 500 }
		}
		
		days_re_enable = 30
		#fire_only_once = yes

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_sell_cost = 25 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_sell_cost = threat_for_cost }
		}
		custom_cost_text = sell_weapons_cost
		
		#cost = 50
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = artillery_equipment
				amount = -500
			}
			add_political_power = base_weapons_sell_cost
			
			hidden_effect = {
				add_to_variable = {
					var = global.total_artillery
					value = 500
				}
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision sell_artillery // total_artillery = [?global.total_artillery]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = artillery_equipment
					ratio > 1
				}
			}
			modifier = {
				add = 50
				has_equipment = { artillery_equipment > 2500 }
			}
			modifier = {
				add = 1
				has_war = no
			}
			modifier = {
				add = 15
				has_political_power < 0
				stockpile_ratio = {
					archetype = artillery_equipment
					ratio > 0.5
				}
			}
			modifier = {
				factor = 0
				has_political_power > 300
			}
			modifier = {
				factor = 0
				has_equipment = { artillery_equipment < 1000 }
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = artillery_equipment
					ratio < 0.9
				}
			}
		}
	}
	
	sell_support = {

		icon = generic_prepare_civil_war

		available = {
			has_equipment = { support_equipment > 500 }
		}
		
		days_re_enable = 30
		#fire_only_once = yes

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_sell_cost = 25 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_sell_cost = threat_for_cost }
		}
		custom_cost_text = sell_weapons_cost
		
		#cost = 50
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = support_equipment
				amount = -500
			}
			add_political_power = base_weapons_sell_cost
			
			hidden_effect = {
				add_to_variable = {
					var = global.total_support
					value = 500
				}
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision sell_support // total_support = [?global.total_support]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = support_equipment
					ratio > 1
				}
			}
			modifier = {
				add = 50
				has_equipment = { support_equipment > 2500 }
			}
			modifier = {
				add = 1
				has_war = no
			}
			modifier = {
				add = 15
				has_political_power < 0
				stockpile_ratio = {
					archetype = support_equipment
					ratio > 0.5
				}
			}
			modifier = {
				factor = 0
				has_political_power > 300
			}
			modifier = {
				factor = 0
				has_equipment = { support_equipment < 1000 }
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = support_equipment
					ratio < 0.9
				}
			}
		}
	}
	
	sell_motorized = {

		icon = generic_industry

		available = {
			has_equipment = { motorized_equipment > 250 }
		}
		
		days_re_enable = 30
		#fire_only_once = yes

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_sell_cost = 25 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_sell_cost = threat_for_cost }
		}
		custom_cost_text = sell_weapons_cost
		
		#cost = 50
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = motorized_equipment
				amount = -250
			}
			add_political_power = base_weapons_sell_cost
			
			hidden_effect = {
				add_to_variable = {
					var = global.total_motorized
					value = 250
				}
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision sell_motorized // total_motorized = [?global.total_motorized]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = motorized_equipment
					ratio > 1
				}
			}
			modifier = {
				add = 50
				has_equipment = { motorized_equipment > 1000 }
			}
			modifier = {
				add = 1
				has_war = no
			}
			modifier = {
				add = 15
				has_political_power < 0
				stockpile_ratio = {
					archetype = motorized_equipment
					ratio > 0.5
				}
			}
			modifier = {
				factor = 0
				has_political_power > 300
			}
			modifier = {
				factor = 0
				has_equipment = { motorized_equipment < 500 }
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = motorized_equipment
					ratio < 0.9
				}
			}
		}
	}
	
	sell_mechanized = {

		icon = generic_industry

		available = {
			has_equipment = { mechanized_equipment > 200 }
		}
		
		days_re_enable = 30
		#fire_only_once = yes

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_sell_cost = 25 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_sell_cost = threat_for_cost }
		}
		custom_cost_text = sell_weapons_cost
		
		#cost = 50
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = mechanized_equipment
				amount = -200
			}
			add_political_power = base_weapons_sell_cost
			
			hidden_effect = {
				add_to_variable = {
					var = global.total_mechanized
					value = 200
				}
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision sell_mechanized // total_mechanized = [?global.total_mechanized]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = mechanized_equipment
					ratio > 1
				}
			}
			modifier = {
				add = 50
				has_equipment = { mechanized_equipment > 1000 }
			}
			modifier = {
				add = 1
				has_war = no
			}
			modifier = {
				add = 15
				has_political_power < 0
				stockpile_ratio = {
					archetype = mechanized_equipment
					ratio > 0.5
				}
			}
			modifier = {
				factor = 0
				has_political_power > 300
			}
			modifier = {
				factor = 0
				has_equipment = { mechanized_equipment < 500 }
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = mechanized_equipment
					ratio < 0.9
				}
			}
		}
	}
	
	sell_light_tanks = {

		icon = generic_tank

		available = {
			has_equipment = { light_tank_equipment > 100 }
		}
		
		days_re_enable = 30
		#fire_only_once = yes

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_sell_cost = 25 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_sell_cost = threat_for_cost }
		}
		custom_cost_text = sell_weapons_cost
		
		#cost = 50
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = light_tank_equipment
				amount = -100
			}
			add_political_power = base_weapons_sell_cost
			
			hidden_effect = {
				add_to_variable = {
					var = global.total_light_tanks
					value = 100
				}
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision sell_light_tanks // total_light_tanks = [?global.total_light_tanks]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = light_tank_equipment
					ratio > 1
				}
			}
			modifier = {
				add = 50
				has_equipment = { light_tank_equipment > 1000 }
			}
			modifier = {
				add = 1
				has_war = no
			}
			modifier = {
				add = 15
				has_political_power < 0
				stockpile_ratio = {
					archetype = light_tank_equipment
					ratio > 0.5
				}
			}
			modifier = {
				factor = 0
				has_political_power > 300
			}
			modifier = {
				factor = 0
				has_equipment = { light_tank_equipment < 500 }
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = light_tank_equipment
					ratio < 0.9
				}
			}
		}
	}
	
	sell_air_light_fighter = {

		icon = generic_air

		available = {
			has_equipment = { fighter_equipment > 100 }
		}
		
		days_re_enable = 30
		#fire_only_once = yes

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_sell_cost = 25 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_sell_cost = threat_for_cost }
		}
		custom_cost_text = sell_weapons_cost
		
		#cost = 50
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = fighter_equipment
				amount = -100
			}
			add_political_power = base_weapons_sell_cost
			
			hidden_effect = {
				add_to_variable = {
					var = global.total_air_light_fighter
					value = 100
				}
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision sell_air_light_fighter // total_air_light_fighter = [?global.total_air_light_fighter]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = fighter_equipment
					ratio > 1
				}
			}
			modifier = {
				add = 50
				has_equipment = { fighter_equipment > 1000 }
			}
			modifier = {
				add = 1
				has_war = no
			}
			modifier = {
				add = 15
				has_political_power < 0
				stockpile_ratio = {
					archetype = fighter_equipment
					ratio > 0.5
				}
			}
			modifier = {
				factor = 0
				has_political_power > 300
			}
			modifier = {
				factor = 0
				has_equipment = { fighter_equipment < 500 }
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = fighter_equipment
					ratio < 0.9
				}
			}
		}
	}
	
	sell_air_heavy_fighter = {

		icon = generic_air

		available = {
			has_equipment = { heavy_fighter_equipment > 100 }
		}
		
		days_re_enable = 30
		#fire_only_once = yes

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_sell_cost = 25 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_sell_cost = threat_for_cost }
		}
		custom_cost_text = sell_weapons_cost
		
		#cost = 50
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = heavy_fighter_equipment
				amount = -100
			}
			add_political_power = base_weapons_sell_cost
			
			hidden_effect = {
				add_to_variable = {
					var = global.total_air_heavy_fighter
					value = 100
				}
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision sell_air_heavy_fighter // total_air_heavy_fighter = [?global.total_air_heavy_fighter]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = heavy_fighter_equipment
					ratio > 1
				}
			}
			modifier = {
				add = 50
				has_equipment = { heavy_fighter_equipment > 1000 }
			}
			modifier = {
				add = 1
				has_war = no
			}
			modifier = {
				add = 15
				has_political_power < 0
				stockpile_ratio = {
					archetype = heavy_fighter_equipment
					ratio > 0.5
				}
			}
			modifier = {
				factor = 0
				has_political_power > 300
			}
			modifier = {
				factor = 0
				has_equipment = { heavy_fighter_equipment < 500 }
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = heavy_fighter_equipment
					ratio < 0.9
				}
			}
		}
	}
	
	sell_air_bomber = {

		icon = generic_air

		available = {
			has_equipment = { tac_bomber_equipment > 100 }
		}
		
		days_re_enable = 30
		#fire_only_once = yes

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_sell_cost = 25 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_sell_cost = threat_for_cost }
		}
		custom_cost_text = sell_weapons_cost
		
		#cost = 50
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = tac_bomber_equipment
				amount = -100
			}
			add_political_power = base_weapons_sell_cost
			
			hidden_effect = {
				add_to_variable = {
					var = global.total_air_bomber
					value = 100
				}
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision sell_air_bomber // total_air_bomber = [?global.total_air_bomber]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = tac_bomber_equipment
					ratio > 1
				}
			}
			modifier = {
				add = 50
				has_equipment = { tac_bomber_equipment > 1000 }
			}
			modifier = {
				add = 1
				has_war = no
			}
			modifier = {
				add = 15
				has_political_power < 0
				stockpile_ratio = {
					archetype = tac_bomber_equipment
					ratio > 0.5
				}
			}
			modifier = {
				factor = 0
				has_political_power > 300
			}
			modifier = {
				factor = 0
				has_equipment = { tac_bomber_equipment < 500 }
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = tac_bomber_equipment
					ratio < 0.9
				}
			}
		}
	}
}


buy_weapons = {
	buy_infantry_weapons = {
		
		icon = generic_prepare_civil_war

		available = {
			has_tech = infantry_weapons
			custom_trigger_tooltip = {
				tooltip = infantry_weapons_more_than_500_tt		
				check_variable = {
					var = global.total_infantry_weapons
					value = 500
					compare = greater_than_or_equals
				}
			}
		}
		
		visible = {
			NOT = { all_state = { is_controlled_by = ROOT } }
		}
		
		days_re_enable = 30
		
		custom_cost_trigger = {
			set_temp_variable = { base_weapons_buy_cost = 50 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_buy_cost = threat_for_cost }
			check_variable = { has_political_power > base_weapons_buy_cost }
		}
		custom_cost_text = buy_weapons_cost

		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = 500
			}

			hidden_effect = {
				subtract_from_variable = {
					var = global.total_infantry_weapons
					value = 500
				}
				set_temp_variable = { base_weapons_buy_cost_minus = 0 }
				subtract_from_temp_variable = { base_weapons_buy_cost_minus = base_weapons_buy_cost }
				add_political_power = base_weapons_buy_cost_minus
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision buy_infantry_weapons // total_infantry_weapons = [?global.total_infantry_weapons]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = infantry_equipment
					ratio < 1
				}
			}
			modifier = {
				add = 10
				has_equipment = {
					infantry_equipment < 10000
				}
			}
			modifier = {
				add = 1
				has_war = yes
			}
			modifier = {
				add = 50
				AND = {
					any_other_country = {
						is_justifying_wargoal_against = ROOT
					}
					OR = {
						has_equipment = {
							infantry_equipment < 10000
						}
						stockpile_ratio = {
							archetype = infantry_equipment
							ratio < 1
						}
					}
				}
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = infantry_equipment
					ratio > 1.5
				}
			}
			modifier = {
				add = -75
				any_other_country = { is_ai = no }
				check_variable = { var = global.total_infantry_weapons < 1002 }
			}
		}
	}
	
	buy_artillery = {
		
		icon = generic_ignite_civil_war

		available = {
			has_tech = gw_artillery
			custom_trigger_tooltip = {
				tooltip = artillery_more_than_500_tt		
				check_variable = {
					var = global.total_artillery
					value = 500
					compare = greater_than_or_equals
				}
			}
		}
		
		visible = {
			NOT = { all_state = { is_controlled_by = ROOT } }
		}
		
		days_re_enable = 30

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_buy_cost = 50 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_buy_cost = threat_for_cost }
			check_variable = { has_political_power > base_weapons_buy_cost }
		}
		custom_cost_text = buy_weapons_cost
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = artillery_equipment
				amount = 500
			}

			hidden_effect = {
				subtract_from_variable = {
					var = global.total_artillery
					value = 500
				}
				set_temp_variable = { base_weapons_buy_cost_minus = 0 }
				subtract_from_temp_variable = { base_weapons_buy_cost_minus = base_weapons_buy_cost }
				add_political_power = base_weapons_buy_cost_minus
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision buy_artillery // total_artillery = [?global.total_artillery]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = artillery_equipment
					ratio < 1
				}
			}
			modifier = {
				add = 10
				has_equipment = {
					artillery_equipment < 1000
				}
			}
			modifier = {
				add = 1
				has_war = yes
			}
			modifier = {
				add = 50
				AND = {
					any_other_country = {
						is_justifying_wargoal_against = ROOT
					}
					OR = {
						has_equipment = {
							artillery_equipment < 1000
						}
						stockpile_ratio = {
							archetype = artillery_equipment
							ratio < 1
						}
					}
				}
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = artillery_equipment
					ratio > 1.5
				}
			}
			modifier = {
				add = -75
				any_other_country = { is_ai = no }
				check_variable = { var = global.total_artillery < 502 }
			}
		}
	}
	
	buy_support = {
		
		icon = generic_prepare_civil_war

		available = {
			has_tech = tech_support
			custom_trigger_tooltip = {
				tooltip = support_more_than_500_tt		
				check_variable = {
					var = global.total_support
					value = 500
					compare = greater_than_or_equals
				}
			}
		}
		
		visible = {
			NOT = { all_state = { is_controlled_by = ROOT } }
		}
		
		days_re_enable = 30

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_buy_cost = 50 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_buy_cost = threat_for_cost }
			check_variable = { has_political_power > base_weapons_buy_cost }
		}
		custom_cost_text = buy_weapons_cost
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = support_equipment
				amount = 500
			}

			hidden_effect = {
				subtract_from_variable = {
					var = global.total_support
					value = 500
				}
				set_temp_variable = { base_weapons_buy_cost_minus = 0 }
				subtract_from_temp_variable = { base_weapons_buy_cost_minus = base_weapons_buy_cost }
				add_political_power = base_weapons_buy_cost_minus
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision buy_support // total_support = [?global.total_support]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = support_equipment
					ratio < 1
				}
			}
			modifier = {
				add = 10
				has_equipment = {
					support_equipment < 1000
				}
			}
			modifier = {
				add = 1
				has_war = yes
			}
			modifier = {
				add = 50
				AND = {
					any_other_country = {
						is_justifying_wargoal_against = ROOT
					}
					OR = {
						has_equipment = {
							support_equipment < 1000
						}
						stockpile_ratio = {
							archetype = support_equipment
							ratio < 1
						}
					}
				}
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = support_equipment
					ratio > 1.5
				}
			}
			modifier = {
				add = -75
				any_other_country = { is_ai = no }
				check_variable = { var = global.total_support < 502 }
			}
		}
	}
	
	buy_motorized = {
		
		icon = generic_industry

		available = {
			has_tech = motorised_infantry
			custom_trigger_tooltip = {
				tooltip = motorized_more_than_250_tt		
				check_variable = {
					var = global.total_motorized
					value = 250
					compare = greater_than_or_equals
				}
			}
		}
		
		visible = {
			NOT = { all_state = { is_controlled_by = ROOT } }
		}
		
		days_re_enable = 30

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_buy_cost = 50 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_buy_cost = threat_for_cost }
			check_variable = { has_political_power > base_weapons_buy_cost }
		}
		custom_cost_text = buy_weapons_cost
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = motorized_equipment
				amount = 250
			}

			hidden_effect = {
				subtract_from_variable = {
					var = global.total_motorized
					value = 250
				}
				set_temp_variable = { base_weapons_buy_cost_minus = 0 }
				subtract_from_temp_variable = { base_weapons_buy_cost_minus = base_weapons_buy_cost }
				add_political_power = base_weapons_buy_cost_minus
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision buy_motorized // total_motorized = [?global.total_motorized]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = motorized_equipment
					ratio < 1
				}
			}
			modifier = {
				add = 10
				has_equipment = {
					motorized_equipment < 1000
				}
			}
			modifier = {
				add = 1
				has_war = yes
			}
			modifier = {
				add = 50
				AND = {
					any_other_country = {
						is_justifying_wargoal_against = ROOT
					}
					OR = {
						has_equipment = {
							motorized_equipment < 1000
						}
						stockpile_ratio = {
							archetype = motorized_equipment
							ratio < 1
						}
					}
				}
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = motorized_equipment
					ratio > 1.5
				}
			}
			modifier = {
				add = -75
				any_other_country = { is_ai = no }
				check_variable = { var = global.total_motorized < 252 }
			}
		}
	}
	
	buy_mechanized = {
		
		icon = generic_industry

		available = {
			has_tech = mechanised_infantry
			custom_trigger_tooltip = {
				tooltip = mechanized_more_than_200_tt		
				check_variable = {
					var = global.total_mechanized
					value = 200
					compare = greater_than_or_equals
				}
			}
		}
		
		visible = {
			NOT = { all_state = { is_controlled_by = ROOT } }
		}
		
		days_re_enable = 30

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_buy_cost = 50 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_buy_cost = threat_for_cost }
			check_variable = { has_political_power > base_weapons_buy_cost }
		}
		custom_cost_text = buy_weapons_cost
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = mechanized_equipment
				amount = 200
			}

			hidden_effect = {
				subtract_from_variable = {
					var = global.total_mechanized
					value = 200
				}
				set_temp_variable = { base_weapons_buy_cost_minus = 0 }
				subtract_from_temp_variable = { base_weapons_buy_cost_minus = base_weapons_buy_cost }
				add_political_power = base_weapons_buy_cost_minus
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision buy_mechanized // total_mechanized = [?global.total_mechanized]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = mechanized_equipment
					ratio < 1
				}
			}
			modifier = {
				add = 10
				has_equipment = {
					mechanized_equipment < 500
				}
			}
			modifier = {
				add = 1
				has_war = yes
			}
			modifier = {
				add = 50
				AND = {
					any_other_country = {
						is_justifying_wargoal_against = ROOT
					}
					OR = {
						has_equipment = {
							mechanized_equipment < 1000
						}
						stockpile_ratio = {
							archetype = mechanized_equipment
							ratio < 1
						}
					}
				}
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = mechanized_equipment
					ratio > 1.5
				}
			}
			modifier = {
				add = -75
				any_other_country = { is_ai = no }
				check_variable = { var = global.total_mechanized < 202 }
			}
		}
	}
	
	buy_light_tanks = {

		icon = generic_tank

		available = {
			has_tech = basic_light_tank
			custom_trigger_tooltip = {
				tooltip = light_tanks_more_than_100_tt		
				check_variable = {
					var = global.total_light_tanks
					value = 100
					compare = greater_than_or_equals
				}
			}
		}
		
		visible = {
			NOT = { all_state = { is_controlled_by = ROOT } }
		}
		
		days_re_enable = 30

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_buy_cost = 50 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_buy_cost = threat_for_cost }
			check_variable = { has_political_power > base_weapons_buy_cost }
		}
		custom_cost_text = buy_weapons_cost
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = light_tank_equipment
				amount = 100
			}

			hidden_effect = {
				subtract_from_variable = {
					var = global.total_light_tanks
					value = 100
				}
				set_temp_variable = { base_weapons_buy_cost_minus = 0 }
				subtract_from_temp_variable = { base_weapons_buy_cost_minus = base_weapons_buy_cost }
				add_political_power = base_weapons_buy_cost_minus
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision buy_light_tanks // total_light_tanks = [?global.total_light_tanks]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = light_tank_equipment
					ratio < 1
				}
			}
			modifier = {
				add = 10
				has_equipment = {
					light_tank_equipment < 500
				}
			}
			modifier = {
				add = 1
				has_war = yes
			}
			modifier = {
				add = 50
				AND = {
					any_other_country = {
						is_justifying_wargoal_against = ROOT
					}
					OR = {
						has_equipment = {
							light_tank_equipment < 1000
						}
						stockpile_ratio = {
							archetype = light_tank_equipment
							ratio < 1
						}
					}
				}
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = light_tank_equipment
					ratio > 1.5
				}
			}
			modifier = {
				add = -75
				any_other_country = { is_ai = no }
				check_variable = { var = global.total_light_tanks < 102 }
			}
		}
	}
	
	buy_air_light_fighter = {

		icon = generic_air

		available = {
			has_tech = early_fighter
			custom_trigger_tooltip = {
				tooltip = air_light_fighter_more_than_100_tt		
				check_variable = {
					var = global.total_air_light_fighter
					value = 100
					compare = greater_than_or_equals
				}
			}
		}
		
		visible = {
			NOT = { all_state = { is_controlled_by = ROOT } }
		}
		
		days_re_enable = 30

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_buy_cost = 50 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_buy_cost = threat_for_cost }
			check_variable = { has_political_power > base_weapons_buy_cost }
		}
		custom_cost_text = buy_weapons_cost
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = fighter_equipment
				amount = 100
			}

			hidden_effect = {
				subtract_from_variable = {
					var = global.total_air_light_fighter
					value = 100
				}
				set_temp_variable = { base_weapons_buy_cost_minus = 0 }
				subtract_from_temp_variable = { base_weapons_buy_cost_minus = base_weapons_buy_cost }
				add_political_power = base_weapons_buy_cost_minus
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision buy_air_light_fighter // total_air_light_fighter = [?global.total_air_light_fighter]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = fighter_equipment
					ratio < 1
				}
			}
			modifier = {
				add = 10
				has_equipment = {
					fighter_equipment < 500
				}
			}
			modifier = {
				add = 1
				has_war = yes
			}
			modifier = {
				add = 50
				AND = {
					any_other_country = {
						is_justifying_wargoal_against = ROOT
					}
					OR = {
						has_equipment = {
							fighter_equipment < 1000
						}
						stockpile_ratio = {
							archetype = fighter_equipment
							ratio < 1
						}
					}
				}
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = fighter_equipment
					ratio > 1.5
				}
			}
			modifier = {
				add = -75
				any_other_country = { is_ai = no }
				check_variable = { var = global.total_air_light_fighter < 102 }
			}
		}
	}
	
	buy_air_heavy_fighter = {

		icon = generic_air

		available = {
			has_tech = heavy_fighter1
			custom_trigger_tooltip = {
				tooltip = air_heavy_fighter_more_than_100_tt		
				check_variable = {
					var = global.total_air_heavy_fighter
					value = 100
					compare = greater_than_or_equals
				}
			}
		}
		
		visible = {
			NOT = { all_state = { is_controlled_by = ROOT } }
		}
		
		days_re_enable = 30

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_buy_cost = 50 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_buy_cost = threat_for_cost }
			check_variable = { has_political_power > base_weapons_buy_cost }
		}
		custom_cost_text = buy_weapons_cost
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = heavy_fighter_equipment
				amount = 100
			}

			hidden_effect = {
				subtract_from_variable = {
					var = global.total_air_heavy_fighter
					value = 100
				}
				set_temp_variable = { base_weapons_buy_cost_minus = 0 }
				subtract_from_temp_variable = { base_weapons_buy_cost_minus = base_weapons_buy_cost }
				add_political_power = base_weapons_buy_cost_minus
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision buy_air_heavy_fighter // total_air_heavy_fighter = [?global.total_air_heavy_fighter]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = heavy_fighter_equipment
					ratio < 1
				}
			}
			modifier = {
				add = 10
				has_equipment = {
					heavy_fighter_equipment < 500
				}
			}
			modifier = {
				add = 1
				has_war = yes
			}
			modifier = {
				add = 50
				AND = {
					any_other_country = {
						is_justifying_wargoal_against = ROOT
					}
					OR = {
						has_equipment = {
							heavy_fighter_equipment < 1000
						}
						stockpile_ratio = {
							archetype = heavy_fighter_equipment
							ratio < 1
						}
					}
				}
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = heavy_fighter_equipment
					ratio > 1.5
				}
			}
			modifier = {
				add = -75
				any_other_country = { is_ai = no }
				check_variable = { var = global.total_air_heavy_fighter < 102 }
			}
		}
	}
	
	buy_air_bomber = {

		icon = generic_air

		available = {
			has_tech = early_bomber
			custom_trigger_tooltip = {
				tooltip = air_bomber_more_than_100_tt		
				check_variable = {
					var = global.total_air_bomber
					value = 100
					compare = greater_than_or_equals
				}
			}
		}
		
		visible = {
			NOT = { all_state = { is_controlled_by = ROOT } }
		}
		
		days_re_enable = 30

		custom_cost_trigger = {
			set_temp_variable = { base_weapons_buy_cost = 50 }
			set_temp_variable = { threat_for_cost = threat }
			divide_temp_variable = { threat_for_cost = 2 }
			add_to_temp_variable = { base_weapons_buy_cost = threat_for_cost }
			check_variable = { has_political_power > base_weapons_buy_cost }
		}
		custom_cost_text = buy_weapons_cost
		
		complete_effect = {
			add_equipment_to_stockpile = {
				type = tac_bomber_equipment
				amount = 100
			}
			hidden_effect = {
				subtract_from_variable = {
					var = global.total_air_bomber
					value = 100
				}
				set_temp_variable = { base_weapons_buy_cost_minus = 0 }
				subtract_from_temp_variable = { base_weapons_buy_cost_minus = base_weapons_buy_cost }
				add_political_power = base_weapons_buy_cost_minus
			}
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision buy_air_bomber // total_air_bomber = [?global.total_air_bomber]"
		}
		
		ai_will_do = {
			factor = 0
			modifier = {
				add = 10
				stockpile_ratio = {
					archetype = tac_bomber_equipment
					ratio < 1
				}
			}
			modifier = {
				add = 10
				has_equipment = {
					tac_bomber_equipment < 500
				}
			}
			modifier = {
				add = 1
				has_war = yes
			}
			modifier = {
				add = 50
				AND = {
					any_other_country = {
						is_justifying_wargoal_against = ROOT
					}
					OR = {
						has_equipment = {
							tac_bomber_equipment < 1000
						}
						stockpile_ratio = {
							archetype = tac_bomber_equipment
							ratio < 1
						}
					}
				}
			}
			modifier = {
				factor = 0
				stockpile_ratio = {
					archetype = tac_bomber_equipment
					ratio > 1.5
				}
			}
			modifier = {
				add = -75
				any_other_country = { is_ai = no }
				check_variable = { var = global.total_air_bomber < 102 }
			}
		}
	}
	
	
	take_all_equipment_from_stock = {
		
		icon = generic_prepare_civil_war

		available = {
			all_state = { is_controlled_by = ROOT }
			if = {
				limit = { check_variable = { global.total_infantry_weapons > 0 } }
				has_tech = infantry_weapons
			}
			if = {
				limit = { check_variable = { global.total_artillery > 0 } }
				has_tech = gw_artillery
			}
			if = {
				limit = { check_variable = { global.total_support > 0 } }
				has_tech = tech_support
			}
			if = {
				limit = { check_variable = { global.total_motorized > 0 } }
				has_tech = motorised_infantry
			}
			if = {
				limit = { check_variable = { global.total_mechanized > 0 } }
				has_tech = mechanised_infantry
			}
			if = {
				limit = { check_variable = { global.total_light_tanks > 0 } }
				has_tech = basic_light_tank
			}
			if = {
				limit = { check_variable = { global.total_air_light_fighter > 0 } }
				has_tech = early_fighter
			}
			if = {
				limit = { check_variable = { global.total_air_heavy_fighter > 0 } }
				has_tech = heavy_fighter1
			}
			if = {
				limit = { check_variable = { global.total_air_bomber > 0 } }
				has_tech = early_bomber
			}
		}
		
		visible = {
			all_state = { is_controlled_by = ROOT }
		}
		
		cost = 0
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision take_all_equipment_from_stock"
			if = {
				limit = { check_variable = { global.total_infantry_weapons > 0 } }
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = global.total_infantry_weapons
				}
				subtract_from_variable = {
					var = global.total_infantry_weapons
					value = global.total_infantry_weapons
				}
			}
			if = {
				limit = { check_variable = { global.total_artillery > 0 } }
				add_equipment_to_stockpile = {
					type = artillery_equipment
					amount = global.total_artillery
				}
				subtract_from_variable = {
					var = global.total_artillery
					value = global.total_artillery
				}
			}
			if = {
				limit = { check_variable = { global.total_support > 0 } }
				add_equipment_to_stockpile = {
					type = support_equipment
					amount = global.total_support
				}
				subtract_from_variable = {
					var = global.total_support
					value = global.total_support
				}
			}
			if = {
				limit = { check_variable = { global.total_motorized > 0 } }
				add_equipment_to_stockpile = {
					type = motorized_equipment
					amount = global.total_motorized
				}
				subtract_from_variable = {
					var = global.total_motorized
					value = global.total_motorized
				}
			}
			if = {
				limit = { check_variable = { global.total_mechanized > 0 } }
				add_equipment_to_stockpile = {
					type = mechanized_equipment
					amount = global.total_mechanized
				}
				subtract_from_variable = {
					var = global.total_mechanized
					value = global.total_mechanized
				}
			}
			if = {
				limit = { check_variable = { global.total_light_tanks > 0 } }
				add_equipment_to_stockpile = {
					type = light_tank_equipment
					amount = global.total_light_tanks
				}
				subtract_from_variable = {
					var = global.total_light_tanks
					value = global.total_light_tanks
				}
			}
			if = {
				limit = { check_variable = { global.total_air_light_fighter > 0 } }
				add_equipment_to_stockpile = {
					type = fighter_equipment
					amount = global.total_air_light_fighter
				}
				subtract_from_variable = {
					var = global.total_air_light_fighter
					value = global.total_air_light_fighter
				}
			}
			if = {
				limit = { check_variable = { global.total_air_heavy_fighter > 0 } }
				add_equipment_to_stockpile = {
					type = heavy_fighter_equipment
					amount = global.total_air_heavy_fighter
				}
				subtract_from_variable = {
					var = global.total_air_heavy_fighter
					value = global.total_air_heavy_fighter
				}
			}
			if = {
				limit = { check_variable = { global.total_air_bomber > 0 } }
				add_equipment_to_stockpile = {
					type = tac_bomber_equipment
					amount = global.total_air_bomber
				}
				subtract_from_variable = {
					var = global.total_air_bomber
					value = global.total_air_bomber
				}
			}
		}
		
		ai_will_do = {
			factor = 100
		}
	}
	
	#increase_threat = {
	#
	#	icon = generic_air
	#
	#	available = {
	#		always = yes
	#	}
	#		
	#	#days_re_enable = 30
	#	#fire_only_once = yes
	#
	#	visible = {
	#		always = yes
	#	}
	#		
	#	#cost = 50
	#		
	#	complete_effect = {
	#		add_threat = 10
	#	}
	#		
	#	ai_will_do = {
	#		factor = 0
	#	}
	#}

}
