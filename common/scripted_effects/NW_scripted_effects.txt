add_var_manpower = {
	set_variable = { var_statistic@ROOT = 0 }
	every_state = { 							# Набивается количество насселения на оккупированной территории
		limit = {
			is_owned_by = ROOT
			is_core_of = ROOT
			NOT = { is_controlled_by = ROOT }
		}
		ROOT = { add_to_variable = { var_statistic@ROOT = PREV.state_population_k } }
	}
	round_variable = var_statistic@ROOT			# Заокругление
	multiply_variable = { var = var_statistic@ROOT value = 0.2 }	# Уменьшение полученного числа в необходимые рамки
	multiply_variable = { var = var_statistic@ROOT value = has_war_support@ROOT }
	clamp_variable = {
		var = var_statistic@ROOT
		min = 220
		max = 7206
	}
	set_variable = { var_second = 0 }			# Немного рандомного разброса
	set_variable = { var_third = 0 }
	every_state = { 							
		limit = {
			is_owned_by = ROOT
			is_core_of = ROOT
			NOT = { is_controlled_by = ROOT }
		}
		add_to_variable = { var_second = THIS.resistance }
		add_to_variable = { var_third = 1 }
	}
	multiply_variable = { var = var_second value = var_third }
	multiply_variable = { var = var_second value = 0.3 } # Чтобы не слишком было читорно в отдельных случаях
	add_to_variable = { var_statistic@ROOT = var_second }
	
	round_variable = var_statistic@ROOT       # Фиксируем прибыль
}

OFFICER_KILL = {
	# Убийство генерала
	set_variable = { del_exp@ROOT = 0 }
	set_variable = { var_second = 0 }			# Немного рандомного разброса
	set_variable = { var_third = 0 }
	every_state = {		
		limit = {
			is_owned_by = FROM
			is_core_of = FROM
			is_controlled_by = ROOT
		}
		add_to_variable = { var_second = THIS.resistance }
		add_to_variable = { var_third = 1 }
	}
	multiply_variable = { var = var_second value = var_third }
	
	if = {
		limit = { check_variable = { var_second < 0.05 } }
		set_variable = { del_exp@ROOT = -2 }
		if = {
			limit = { NOT = { FROM = { has_country_flag = kill_to_boss } has_game_rule = { rule = kill_general option = FORBIDDEN_TO_KILL } } }
			random_list = {
				1 = {
					FROM = { set_country_flag = kill_to_boss }
					set_country_flag = i_kill_you
				}
				99 = {
					
				}
			}
		}
	}
	else_if = {
		limit = { check_variable = { var_second < 0.1 } }
		set_variable = { del_exp@ROOT = -5 }
		if = {
			limit = { NOT = { FROM = { has_country_flag = kill_to_boss } has_game_rule = { rule = kill_general option = FORBIDDEN_TO_KILL } } }
			random_list = {
				1 = {
					FROM = { set_country_flag = kill_to_boss }
					set_country_flag = i_kill_you
				}
				29 = {
					
				}
			}
		}
	}
	else_if = {
		limit = { check_variable = { var_second < 0.2 } }
		set_variable = { del_exp@ROOT = -10 }
		if = {
			limit = { NOT = { FROM = { has_country_flag = kill_to_boss } has_game_rule = { rule = kill_general option = FORBIDDEN_TO_KILL } } }
			random_list = {
				1 = {
					FROM = { set_country_flag = kill_to_boss }
					set_country_flag = i_kill_you
				}
				9 = {
					
				}
			}
		}
	}
	else_if = {
		limit = { check_variable = { var_second < 0.4 } }
		set_variable = { del_exp@ROOT = -20 }
		if = {
			limit = { NOT = { FROM = { has_country_flag = kill_to_boss } has_game_rule = { rule = kill_general option = FORBIDDEN_TO_KILL } } }
			random_list = {
				1 = {
					FROM = { set_country_flag = kill_to_boss }
					set_country_flag = i_kill_you
				}
				3 = {
					
				}
			}
		}
	}
	else_if = {
		limit = { 
			NOT = { check_variable = { var_second < 0.4 } } 
			NOT = { FROM = { has_country_flag = kill_to_boss } }
			NOT = { has_game_rule = { rule = kill_general option = FORBIDDEN_TO_KILL } }
		}
		FROM = { set_country_flag = kill_to_boss }
		set_country_flag = i_kill_you
		set_variable = { del_exp@ROOT = -25 }
	}
	else = {
		set_variable = { del_exp@ROOT = -25 }
	}
}

GENERAL_STRIKE = {
	if = {
		limit = { check_variable = { THIS.resistance < 0.05 } }
		random_list = {
			1 = { country_event = { id = resistance.2 } }
			1 = { country_event = { id = resistance.3 } }
			1 = { country_event = { id = resistance.4 } }
		}
	}
	else_if = {
		limit = { check_variable = { THIS.resistance < 0.1 } }
		random_list = {
			2 = { country_event = { id = resistance.2 } }
			4 = { country_event = { id = resistance.3 } }
			3 = { country_event = { id = resistance.4 } }
		}
	}
	else_if = {
		limit = { check_variable = { THIS.resistance < 0.2 } }
		random_list = {
			3 = { country_event = { id = resistance.2 } }
			4 = { country_event = { id = resistance.3 } }
			5 = { country_event = { id = resistance.4 } }
		}
	}
	else_if = {
		limit = { check_variable = { THIS.resistance < 0.4 } }
		random_list = {
			1 = { country_event = { id = resistance.2 } }
			4 = { country_event = { id = resistance.3 } }
			8 = { country_event = { id = resistance.4 } }
		}
	}
	else = {
		random_list = {
			2 = { country_event = { id = resistance.3 } }
			8 = { country_event = { id = resistance.4 } }
		}
	}
}

# Механика подсчёта необходимого количества дней для решений Сопротивления в зависимости от уровня развития средств шифрования и дешифрования
ITS_TIME_TO_DIE = {
	set_variable = { var_second@THIS = 0 }
				
	if = { limit = { has_tech = basic_encryption } add_to_variable = { var = var_second@THIS value = 1 } }
	if = { limit = { has_tech = improved_encryption } add_to_variable = { var = var_second@THIS value = 1 } }
	if = { limit = { has_tech = advanced_encryption } add_to_variable = { var = var_second@THIS value = 1 } }
	if = { limit = { has_tech = basic_decryption } add_to_variable = { var = var_second@THIS value = 1 } }
	if = { limit = { has_tech = improved_decryption } add_to_variable = { var = var_second@THIS value = 1 } }
	if = { limit = { has_tech = advanced_decryption } add_to_variable = { var = var_second@THIS value = 1 } }
}

ITS_TIME_TO_DIE_SET = {
	if = {
		limit = { check_variable = { var_second@ROOT = -6 } }
		set_variable = { var_first@ROOT = 80 }
	}
	else_if = {
		limit = { check_variable = { var_second@ROOT = -5 } }
		set_variable = { var_first@ROOT = 77 }
	}
	else_if = {
		limit = { check_variable = { var_second@ROOT = -4 } }
		set_variable = { var_first@ROOT = 72 }
	}
	else_if = {
		limit = { check_variable = { var_second@ROOT = -3 } }
		set_variable = { var_first@ROOT = 65 }
	}
	else_if = {
		limit = { check_variable = { var_second@ROOT = -2 } }
		set_variable = { var_first@ROOT = 55 }
	}
	else_if = {
		limit = { check_variable = { var_second@ROOT = -1 } }
		set_variable = { var_first@ROOT = 48 }
	}
	else_if = {
		limit = { check_variable = { var_second@ROOT = 0 } }
		set_variable = { var_first@ROOT = 35 }
	}
	else_if = {
		limit = { check_variable = { var_second@ROOT = 1 } }
		set_variable = { var_first@ROOT = 25 }
	}
	else_if = {
		limit = { check_variable = { var_second@ROOT = 2 } }
		set_variable = { var_first@ROOT = 18 }
	}
	else_if = {
		limit = { check_variable = { var_second@ROOT = 3 } }
		set_variable = { var_first@ROOT = 12 }
	}
	else_if = {
		limit = { check_variable = { var_second@ROOT = 4 } }
		set_variable = { var_first@ROOT = 8 }
	}
	else_if = {
		limit = { check_variable = { var_second@ROOT = 5 } }
		set_variable = { var_first@ROOT = 5 }
	}
	else_if = {
		limit = { check_variable = { var_second@ROOT = 6 } }
		set_variable = { var_first@ROOT = 3 }
	}
}

clr_flags = {
	if = {
		limit = { FROM = { has_country_flag = strike_to_infrastructure } }
		random_state = {
			limit = {
				is_owned_by = FROM
				NOT = { is_controlled_by = FROM }
				has_state_flag = undermining_the_infrastructure_flag
			}
			clr_state_flag = undermining_the_infrastructure_flag
			save_event_target_as = infrastructure_flag_target
		}
		FROM = { clr_country_flag = strike_to_infrastructure }
	}
	else_if = {
		limit = { FROM = { has_country_flag = strike_to_dockyard } }
		random_state = {
			limit = {
				is_owned_by = FROM
				NOT = { is_controlled_by = FROM }
				has_state_flag = undermining_the_dockyard_flag
			}
			clr_state_flag = undermining_the_dockyard_flag
			save_event_target_as = dockyard_flag_target
		}
		FROM = { clr_country_flag = strike_to_dockyard }
	}
	else_if = {
		limit = { FROM = { has_country_flag = strike_to_arms_factory } }
		random_state = {
			limit = {
				is_owned_by = FROM
				NOT = { is_controlled_by = FROM }
				has_state_flag = undermining_the_arms_factory
			}
			clr_state_flag = undermining_the_arms_factory
			save_event_target_as = arms_factory_flag_target
		}
		FROM = { clr_country_flag = strike_to_arms_factory }
	}
	else_if = {
		limit = { FROM = { has_country_flag = strike_to_industrial_complex } }
		random_state = {
			limit = {
				is_owned_by = FROM
				NOT = { is_controlled_by = FROM }
				has_state_flag = undermining_the_industrial_complex
			}
			clr_state_flag = undermining_the_industrial_complex
			save_event_target_as = industrial_complex_flag_target
		}
		FROM = { clr_country_flag = strike_to_industrial_complex }
	}
	else_if = {
		limit = { FROM = { has_country_flag = strike_to_anti_air_building } }
		random_state = {
			limit = {
				is_owned_by = FROM
				NOT = { is_controlled_by = FROM }
				has_state_flag = undermining_the_anti_air_building
			}
			clr_state_flag = undermining_the_anti_air_building
			save_event_target_as = anti_air_building_flag_target
		}
		FROM = { clr_country_flag = strike_to_anti_air_building }
	}
	else_if = {
		limit = { FROM = { has_country_flag = strike_to_synthetic_refinery } }
		random_state = {
			limit = {
				is_owned_by = FROM
				NOT = { is_controlled_by = FROM }
				has_state_flag = undermining_the_synthetic_refinery
			}
			clr_state_flag = undermining_the_synthetic_refinery
			save_event_target_as = synthetic_refinery_flag_target
		}
		FROM = { clr_country_flag = strike_to_synthetic_refinery }
	}
	else_if = {
		limit = { FROM = { has_country_flag = strike_to_fuel_silo } }
		random_state = {
			limit = {
				is_owned_by = FROM
				NOT = { is_controlled_by = FROM }
				has_state_flag = undermining_the_fuel_silo
			}
			clr_state_flag = undermining_the_fuel_silo
			save_event_target_as = fuel_silo_flag_target
		}
		FROM = { clr_country_flag = strike_to_fuel_silo }
	}
	else_if = {
		limit = { FROM = { has_country_flag = strike_to_radar_station } }
		random_state = {
			limit = {
				is_owned_by = FROM
				NOT = { is_controlled_by = FROM }
				has_state_flag = undermining_the_radar_station
			}
			clr_state_flag = undermining_the_radar_station
			save_event_target_as = radar_flag_target
		}
		FROM = { clr_country_flag = strike_to_radar_station }
	}
	else_if = {
		limit = { FROM = { has_country_flag = strike_to_rocket_site } }
		random_state = {
			limit = {
				is_owned_by = FROM
				NOT = { is_controlled_by = FROM }
				has_state_flag = undermining_the_rocket_site
			}
			clr_state_flag = undermining_the_rocket_site
			save_event_target_as = rocket_flag_target
		}
		FROM = { clr_country_flag = strike_to_rocket_site }
	}
	else_if = {
		limit = { FROM = { has_country_flag = strike_to_nuclear } }
		random_state = {
			limit = {
				is_owned_by = FROM
				NOT = { is_controlled_by = FROM }
				has_state_flag = undermining_the_nuclear_flag
			}
			clr_state_flag = undermining_the_nuclear_flag
			save_event_target_as = nuclear_flag_target
		}
		FROM = { clr_country_flag = strike_to_nuclear }
	}
	else_if = {
		limit = { FROM = { has_country_flag = strike_to_aviabase } }
		random_state = {
			limit = {
				is_owned_by = FROM
				NOT = { is_controlled_by = FROM }
				has_state_flag = undermining_the_aviabase_flag
			}
			clr_state_flag = undermining_the_aviabase_flag
			save_event_target_as = aviabase_flag_target
		}
		FROM = { clr_country_flag = strike_to_aviabase }
	}
}

attack_to = {
	log = "[GetDateText]: [Root.GetName]: okay"
		if = {
			limit = { FROM = { has_country_flag = strike_to_infrastructure } }
			log = "[GetDateText]: [Root.GetName]: okay 2"
			random_state = {
				limit = {
					is_owned_by = FROM
					NOT = { is_controlled_by = FROM }
					has_state_flag = undermining_the_infrastructure_flag
				}
				log = "[GetDateText]: [Root.GetName]: okay 3"
				clr_state_flag = undermining_the_infrastructure_flag
				damage_building = {
					type = infrastructure
					damage = 1
				}
			}
			FROM = { clr_country_flag = strike_to_infrastructure }
		}
		else_if = {
			limit = { FROM = { has_country_flag = strike_to_dockyard } }
			random_state = {
				limit = {
					is_owned_by = FROM
					NOT = { is_controlled_by = FROM }
					has_state_flag = undermining_the_dockyard_flag
				}
				clr_state_flag = undermining_the_dockyard_flag
				damage_building = {
					type = dockyard
					damage = 1
				}
			}
			FROM = { clr_country_flag = strike_to_dockyard }
		}
		else_if = {
			limit = { FROM = { has_country_flag = strike_to_arms_factory } }
			random_state = {
				limit = {
					is_owned_by = FROM
					NOT = { is_controlled_by = FROM }
					has_state_flag = undermining_the_arms_factory
				}
				clr_state_flag = undermining_the_arms_factory
				damage_building = {
					type = arms_factory
					damage = 1
				}
			}
			FROM = { clr_country_flag = strike_to_arms_factory }
		}
		else_if = {
			limit = { FROM = { has_country_flag = strike_to_industrial_complex } }
			random_state = {
				limit = {
					is_owned_by = FROM
					NOT = { is_controlled_by = FROM }
					has_state_flag = undermining_the_industrial_complex
				}
				clr_state_flag = undermining_the_industrial_complex
				damage_building = {
					type = industrial_complex
					damage = 1
				}
			}
			FROM = { clr_country_flag = strike_to_industrial_complex }
		}
		else_if = {
			limit = { FROM = { has_country_flag = strike_to_anti_air_building } }
			random_state = {
				limit = {
					is_owned_by = FROM
					NOT = { is_controlled_by = FROM }
					has_state_flag = undermining_the_anti_air_building
				}
				clr_state_flag = undermining_the_anti_air_building
				damage_building = {
					type = anti_air_building
					damage = 1
				}
			}
			FROM = { clr_country_flag = strike_to_anti_air_building }
		}
		else_if = {
			limit = { FROM = { has_country_flag = strike_to_synthetic_refinery } }
			random_state = {
				limit = {
					is_owned_by = FROM
					NOT = { is_controlled_by = FROM }
					has_state_flag = undermining_the_synthetic_refinery
				}
				clr_state_flag = undermining_the_synthetic_refinery
				damage_building = {
					type = synthetic_refinery
					damage = 1
				}
			}
			FROM = { clr_country_flag = strike_to_synthetic_refinery }
		}
		else_if = {
			limit = { FROM = { has_country_flag = strike_to_fuel_silo } }
			random_state = {
				limit = {
					is_owned_by = FROM
					NOT = { is_controlled_by = FROM }
					has_state_flag = undermining_the_fuel_silo
				}
				clr_state_flag = undermining_the_fuel_silo
				damage_building = {
					type = fuel_silo
					damage = 1
				}
			}
			FROM = { clr_country_flag = strike_to_fuel_silo }
		}
		else_if = {
			limit = { FROM = { has_country_flag = strike_to_radar_station } }
			random_state = {
				limit = {
					is_owned_by = FROM
					NOT = { is_controlled_by = FROM }
					has_state_flag = undermining_the_radar_station
				}
				clr_state_flag = undermining_the_radar_station
				damage_building = {
					type = radar_station
					damage = 1
				}
			}
			FROM = { clr_country_flag = strike_to_radar_station }
		}
		else_if = {
			limit = { FROM = { has_country_flag = strike_to_rocket_site } }
			random_state = {
				limit = {
					is_owned_by = FROM
					NOT = { is_controlled_by = FROM }
					has_state_flag = undermining_the_rocket_site
				}
				clr_state_flag = undermining_the_rocket_site
				damage_building = {
					type = rocket_site
					damage = 1
				}
			}
			FROM = { clr_country_flag = strike_to_rocket_site }
		}
		else_if = {
			limit = { FROM = { has_country_flag = strike_to_nuclear } }
			random_state = {
				limit = {
					is_owned_by = FROM
					NOT = { is_controlled_by = FROM }
					has_state_flag = undermining_the_nuclear_flag
				}
				the_nuclear_attack = yes
				clr_state_flag = undermining_the_nuclear_flag
				damage_building = {
					type = nuclear_reactor
					damage = 1
				}
			}
			FROM = { clr_country_flag = strike_to_nuclear }
		}
		else_if = {
			limit = { FROM = { has_country_flag = strike_to_aviabase } }
			random_state = {
				limit = {
					is_owned_by = FROM
					NOT = { is_controlled_by = FROM }
					has_state_flag = undermining_the_aviabase_flag
				}
				clr_state_flag = undermining_the_aviabase_flag
				damage_building = {
					type = air_base
					damage = 1
				}
			}
			FROM = { clr_country_flag = strike_to_aviabase }
		}
 }
 
 clr_losses = {
	if = {
		limit = { has_country_flag = losses_1 }
		clr_country_flag = losses_1
	
		custom_effect_tooltip = losses_1_tt
		add_to_variable = { var = rebel_manpower@ROOT value = -635 }
		add_to_variable = { var = rebel_infantry_equipment@ROOT value = -210 }
		add_to_variable = { var = rebel_support_equipment@ROOT value = -24 }
	}
	else_if = {
		limit = { has_country_flag = losses_2 }
		clr_country_flag = losses_2
		
		custom_effect_tooltip = losses_2_tt
		add_to_variable = { var = rebel_manpower@ROOT value = -312 }
		add_to_variable = { var = rebel_infantry_equipment@ROOT value = -105 }
		add_to_variable = { var = rebel_support_equipment@ROOT value = -12 }
	}
	else_if = {
		limit = { has_country_flag = losses_3 }
		clr_country_flag = losses_3
		
		custom_effect_tooltip = losses_3_tt
		add_to_variable = { var = rebel_manpower@ROOT value = -151 }
		add_to_variable = { var = rebel_infantry_equipment@ROOT value = -51 }
		add_to_variable = { var = rebel_support_equipment@ROOT value = -4 }
	}
	else_if = {
		limit = { has_country_flag = losses_4 }
		clr_country_flag = losses_4
		
		custom_effect_tooltip = losses_4_tt
		add_to_variable = { var = rebel_manpower@ROOT value = -34 }
		add_to_variable = { var = rebel_infantry_equipment@ROOT value = -12 }
		add_to_variable = { var = rebel_support_equipment@ROOT value = -2 }
	}
	else_if = {
		limit = { has_country_flag = losses_5 }
		clr_country_flag = losses_5
		
		custom_effect_tooltip = losses_5_tt
		add_to_variable = { var = rebel_manpower@ROOT value = -8 }
		add_to_variable = { var = rebel_infantry_equipment@ROOT value = -6 }
		add_to_variable = { var = rebel_support_equipment@ROOT value = -1 }
	}
}
delete_rebel_template = {
	if = {
		limit = { has_template = "Rebel Division" }
		delete_unit_template_and_units = { division_template = "Rebel Division" }
	}
	else_if = {
		limit = { has_template = "Light Rebel Division" }
		delete_unit_template_and_units = { division_template = "Light Rebel Division" }
	}
	else_if = {
		limit = { has_template = "Dywizja Armii Krajowej" }
		delete_unit_template_and_units = { division_template = "Dywizja Armii Krajowej" }
	}
	else_if = {
		limit = { has_template = "Lekka Dywizja Armii Krajowej" }
		delete_unit_template_and_units = { division_template = "Lekka Dywizja Armii Krajowej" }
	}
	else_if = {
		limit = { has_template = "Dywizja Armii Ludowej" }
		delete_unit_template_and_units = { division_template = "Dywizja Armii Ludowej" }
	}
	else_if = {
		limit = { has_template = "Lekka Dywizja Armii Ludowej" }
		delete_unit_template_and_units = { division_template = "Lekka Dywizja Armii Ludowej" }
	}
}