COG_update_administration_of_tribal_leaders_idea = {
	every_controlled_state = {
		limit = { is_original_congo_state = yes }
		add_to_temp_variable = { sum = COG_loyalty_lvl_var }
		add_to_temp_variable = { num_states = 1 }
	}
	set_temp_variable = { faithful = 4 } multiply_temp_variable = { faithful = num_states }
	set_temp_variable = { loyal = 2.33 } multiply_temp_variable = { loyal = num_states } round_temp_variable = loyal
	# set_temp_variable = { disloyal = 4 } multiply_temp_variable = { disloyal = num_states }
	
	if = {
		limit = { check_variable = { var = sum value = faithful compare = greater_than_or_equals } }
		set_temp_variable = { temp_value = sum }
		multiply_temp_variable = { temp_value = 0.01 }
		set_variable = { COG_atl_political_power_gain = temp_value }
		
		set_temp_variable = { temp_value = sum }
		multiply_temp_variable = { temp_value = 0.005 }
		set_variable = { COG_atl_local_resources_factor = temp_value }
		
		set_temp_variable = { temp_value = sum }
		multiply_temp_variable = { temp_value = -0.02 }
		divide_temp_variable = { temp_value = 3 }
		set_variable = { COG_atl_monthly_population = temp_value }
		
		if = {
			limit = { NOT = { has_dynamic_modifier = { modifier = COG_faithful_administration_of_tribal_leaders } } }
			add_dynamic_modifier = { modifier = COG_faithful_administration_of_tribal_leaders }
		}
		if = {
			limit = { has_dynamic_modifier = { modifier = COG_loyal_administration_of_tribal_leaders } }
			remove_dynamic_modifier = { modifier = COG_loyal_administration_of_tribal_leaders }
		}
		if = {
			limit = { has_dynamic_modifier = { modifier = COG_disloyal_administration_of_tribal_leaders } }
			remove_dynamic_modifier = { modifier = COG_disloyal_administration_of_tribal_leaders }
		}
	}
	else_if = {
		limit = { #?
			# check_variable = { sum < 24 }
			check_variable = { var = sum value = loyal compare = greater_than_or_equals }
		}
		set_temp_variable = { temp_value = sum }
		multiply_temp_variable = { temp_value = 0.031 }
		subtract_from_temp_variable = { temp_value = 0.495 }
		set_variable = { COG_atl_political_power_gain = temp_value }
		
		set_temp_variable = { temp_value = sum }
		multiply_temp_variable = { temp_value = 0.005 }
		# ? !!
		set_variable = { COG_atl_local_resources_factor = temp_value }
		
		set_temp_variable = { temp_value = sum }
		multiply_temp_variable = { temp_value = -0.02 }
		divide_temp_variable = { temp_value = 3 }
		set_variable = { COG_atl_monthly_population = temp_value }
		
		if = {
			limit = { has_dynamic_modifier = { modifier = COG_faithful_administration_of_tribal_leaders } }
			remove_dynamic_modifier = { modifier = COG_faithful_administration_of_tribal_leaders }
		}
		if = {
			limit = { NOT = { has_dynamic_modifier = { modifier = COG_loyal_administration_of_tribal_leaders } } }
			add_dynamic_modifier = { modifier = COG_loyal_administration_of_tribal_leaders }
		}
		if = {
			limit = { has_dynamic_modifier = { modifier = COG_disloyal_administration_of_tribal_leaders } }
			remove_dynamic_modifier = { modifier = COG_disloyal_administration_of_tribal_leaders }
		}
	}
	else = { #?
		# limit = { #?
			# check_variable = { sum < 14 }
		# }
		set_temp_variable = { temp_value = sum }
		multiply_temp_variable = { temp_value = 0.01 }
		subtract_from_temp_variable = { temp_value = 0.21 }
		set_variable = { COG_atl_political_power_gain = temp_value }
		
		set_temp_variable = { temp_value = sum }
		multiply_temp_variable = { temp_value = 0.005 }
		subtract_from_temp_variable = { temp_value = 0.105 }
		set_variable = { COG_atl_local_resources_factor = temp_value }
		
		# set_temp_variable = { temp_value = sum }
		# multiply_temp_variable = { temp_value = -0.02 }
		# divide_temp_variable = { temp_value = 3 }
		set_variable = { COG_atl_monthly_population = 0 }
		
		if = {
			limit = { has_dynamic_modifier = { modifier = COG_faithful_administration_of_tribal_leaders } }
			remove_dynamic_modifier = { modifier = COG_faithful_administration_of_tribal_leaders }
		}
		if = {
			limit = { has_dynamic_modifier = { modifier = COG_loyal_administration_of_tribal_leaders } }
			remove_dynamic_modifier = { modifier = COG_loyal_administration_of_tribal_leaders }
		}
		if = {
			limit = { NOT = { has_dynamic_modifier = { modifier = COG_disloyal_administration_of_tribal_leaders } } }
			add_dynamic_modifier = { modifier = COG_disloyal_administration_of_tribal_leaders }
		}
	}
	
	force_update_dynamic_modifier = yes
	add_to_variable = { nw_CongoGoogleMaps_update = 1 }
}

COG_cotton_roads_lvl_update = {
	for_each_scope_loop = { #?
		array = owned_controlled_states
		add_to_temp_variable = { inf_count = non_damaged_building_level@infrastructure }
	}
	divide_temp_variable = { inf_count = num_owned_controlled_states }
	round_temp_variable = inf_count
	clamp_temp_variable = { var = inf_count min = 1 max = 5 }
	
	hidden_effect = {
		remove_ideas = COG_cotton_roads_lvl_1
		remove_ideas = COG_cotton_roads_lvl_2
		remove_ideas = COG_cotton_roads_lvl_3
		remove_ideas = COG_cotton_roads_lvl_4
		remove_ideas = COG_cotton_roads_lvl_5
		remove_ideas = COG_cotton_roads_lvl_1_trait
		remove_ideas = COG_cotton_roads_lvl_2_trait
		remove_ideas = COG_cotton_roads_lvl_3_trait
		remove_ideas = COG_cotton_roads_lvl_4_trait
		remove_ideas = COG_cotton_roads_lvl_5_trait
	}
	
	if = {
		limit = { has_completed_focus = COG_support_for_makand }
		meta_effect = {
			text = {
				add_ideas = COG_cotton_roads_lvl_[LVL]_trait
			}
			LVL = "[?inf_count]"
		}
	}
	else = {
		meta_effect = {
			text = {
				add_ideas = COG_cotton_roads_lvl_[LVL]
			}
			LVL = "[?inf_count]"
		}
	}
}

COG_build_inga_dam_update = {
	subtract_from_variable = { COG_build_inga_dam_var = 400 } # tooltip ?
	if = {
		limit = { has_decision = COG_build_inga_dam }
		add_days_remove = {
			decision = COG_build_inga_dam
			days = -400
		}
	}
	log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): scripted_effect COG_build_inga_dam_update = yes"
}

COG_build_power_plant_on_inga_dam_update = {
	if = {
		limit = { has_completed_focus = COG_build_of_hpps }
		custom_effect_tooltip = COG_build_power_plant_on_inga_dam_update_tt
	}
	add_to_variable = { COG_build_power_plant_on_inga_dam_var = 30 } # tooltip ?
	add_to_variable = { COG_bppid_industrial_complex_level = 1 } # tooltip ?
	log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): scripted_effect COG_build_power_plant_on_inga_dam_update = yes"
}

COG_resistance_and_compliance_in_state_update = {
	set_temp_variable = { current_scope = event_target:state_scope.id }
	if = {
		limit = { check_variable = { current_scope = 1044.id } }
		if = {
			limit = { check_variable = { resistance_and_compliance = 1 } }
			1044 = { add_resistance = -10 }
			1045 = { add_resistance = -10 }
		}
		else_if = {
			limit = { check_variable = { resistance_and_compliance = 2 } }
			1044 = { add_compliance = 10 }
			1045 = { add_compliance = 10 }
		}
	}
	else_if = {
		limit = { check_variable = { current_scope = 1005.id } }
		if = {
			limit = { check_variable = { resistance_and_compliance = 1 } }
			1005 = { add_resistance = -10 }
		}
		else_if = {
			limit = { check_variable = { resistance_and_compliance = 2 } }
			1005 = { add_compliance = 10 }
		}
	}
	else_if = {
		limit = { check_variable = { current_scope = 1001.id } }
		if = {
			limit = { check_variable = { resistance_and_compliance = 1 } }
			1001 = { add_resistance = -10}
			977 = { add_resistance = -10 }
		}
		else_if = {
			limit = { check_variable = { resistance_and_compliance = 2 } }
			1001 = { add_compliance = 10 }
			977 = { add_compliance = 10 }
		}
	}
	else_if = {
		limit = { check_variable = { current_scope = 1002.id } }
		if = {
			limit = { check_variable = { resistance_and_compliance = 1 } }
			1002 = { add_resistance = -10 }
			1102 = { add_resistance = -10 }
		}
		else_if = {
			limit = { check_variable = { resistance_and_compliance = 2 } }
			1002 = { add_compliance = 10 }
			1102 = { add_compliance = 10 }
		}
	}
	else_if = {
		limit = { check_variable = { current_scope = 931.id } }
		if = {
			limit = { check_variable = { resistance_and_compliance = 1 } }
			931 = { add_resistance = -10 }
			922 = { add_resistance = -10 }
			1004 = { add_resistance = -10 }
		}
		else_if = {
			limit = { check_variable = { resistance_and_compliance = 2 } }
			931 = { add_compliance = 10 }
			922 = { add_compliance = 10 }
			1004 = { add_compliance = 10 }
		}
	}
	else_if = {
		limit = { check_variable = { current_scope = 871.id } }
		if = {
			limit = { check_variable = { resistance_and_compliance = 1 } }
			871 = { add_resistance = -10 }
		}
		else_if = {
			limit = { check_variable = { resistance_and_compliance = 2 } }
			871 = { add_compliance = 10 }
		}
	}
}

COG_army_irregular_effect = {
	if = {
		limit = { check_variable = { COG_loyalty_lvl_var = 2 } }
		add_manpower = -3000
		create_unit = {
			division = "name = \"Militia Unit\" division_template = \"Militia Unit\" start_experience_factor = 0.1 start_equipment_factor = 0.6"
			owner = ROOT
			allow_spawning_on_enemy_provs = yes
			count = 1
		}
		add_to_temp_variable = { num_milita_unit = 1 }
	}
	else_if = {
		limit = { check_variable = { COG_loyalty_lvl_var = 3 } }
		add_manpower = -6000
		create_unit = {
			division = "name = \"Militia Unit\" division_template = \"Militia Unit\" start_experience_factor = 0.1 start_equipment_factor = 0.6"
			owner = ROOT
			allow_spawning_on_enemy_provs = yes
			count = 2
		}
		add_to_temp_variable = { num_milita_unit = 2 }
	}
	else_if = {
		limit = { check_variable = { COG_loyalty_lvl_var = 4 } }
		add_manpower = -9000
		create_unit = {
			division = "name = \"Militia Unit\" division_template = \"Militia Unit\" start_experience_factor = 0.1 start_equipment_factor = 0.6"
			owner = ROOT
			allow_spawning_on_enemy_provs = yes
			count = 1
		}
		create_unit = {
			division = "name = \"Militia Division\" division_template = \"Militia Division\" start_experience_factor = 0.1 start_equipment_factor = 0.6"
			owner = ROOT
			allow_spawning_on_enemy_provs = yes
			count = 1
		}
		add_to_temp_variable = { num_milita_division = 1 }
		add_to_temp_variable = { num_milita_unit = 1 }
	}
	else_if = {
		limit = { check_variable = { COG_loyalty_lvl_var = 5 } }
		add_manpower = -12000
		create_unit = {
			division = "name = \"Militia Division\" division_template = \"Militia Division\" start_experience_factor = 0.1 start_equipment_factor = 0.6"
			owner = ROOT
			allow_spawning_on_enemy_provs = yes
			count = 2
		}
		add_to_temp_variable = { num_milita_division = 2 }
	}
}

COG_install_some_stuff_PREVPREV = {
	PREV = {
		set_variable = { nw_CongoGoogleMaps = PREV.nw_CongoGoogleMaps }
		set_variable = { COG_evolues_gain_var = PREV.COG_evolues_gain_var }
		set_variable = { COG_evolues_bonus_coeff = PREV.COG_evolues_bonus_coeff }
		set_variable = { COG_evolues_limit_on_repression = PREV.COG_evolues_limit_on_repression }
		set_variable = { COG_local_farmers_program_count = PREV.COG_local_farmers_program_count }
		set_variable = { COG_plant_new_soybean_varieties_count = PREV.COG_plant_new_soybean_varieties_count } #?
		set_variable = { COG_bppid_industrial_complex_level = PREV.COG_bppid_industrial_complex_level }
		set_variable = { COG_build_power_plant_on_inga_dam_var = PREV.COG_build_power_plant_on_inga_dam_var }
		set_variable = { COG_build_inga_dam_var = PREV.COG_build_inga_dam_var }
		set_variable = { COG_ctf_cotton_plantations_cost = PREV.COG_ctf_cotton_plantations_cost }
		set_variable = { COG_union_miniere_factory = PREV.COG_union_miniere_factory }
		# set_variable = { COG_integrate_kingdom_decision_end = PREV.COG_integrate_kingdom_decision_end } #?
		country_event = { id = congo.1 days = 30 random_days = 720 } # ?
		country_event = { id = congo.2 days = 30 random_days = 720 }
		country_event = { id = congo.3 days = 30 random_days = 720 }
		country_event = { id = congo.4 days = 30 random_days = 720 }
		country_event = { id = congo.5 days = 30 random_days = 720 }
		country_event = { id = congo.6 days = 30 random_days = 720 }
		country_event = { id = congo.7 days = 30 random_days = 720 }
		country_event = { id = congo.8 days = 30 random_days = 720 }
		country_event = { id = congo.9 days = 30 random_days = 720 }
		country_event = { id = congo.10 days = 30 random_days = 365 }
		country_event = { id = congo.11 days = 30 random_days = 720 }
		country_event = { id = congo.12 days = 30 random_days = 720 }
		country_event = { id = congo.13 days = 30 random_days = 720 }
	}
	if = {
		limit = { has_country_flag = COG_establish_khakista_flag }
		PREV = {
			set_country_flag = COG_establish_khakista_flag
		}
	}
	if = { #?
		limit = { has_country_flag = block_COG_recognition_of_congolese_church_focus }
		PREV = {
			set_country_flag = block_COG_recognition_of_congolese_church_focus
		}
	}
	if = {
		limit = { has_country_flag = COG_cotton_roads_flag }
		PREV = {
			set_country_flag = COG_cotton_roads_flag
		}
	}
	if = { #?
		limit = { has_country_flag = COG_management_of_union_miniere_company_flag }
		PREV = {
			set_country_flag = COG_management_of_union_miniere_company_flag
		}
	}
	# if = { #?
		# limit = { has_country_flag = COG_simon_kimbangu_political_advisor }
		# PREV = {
			# set_country_flag = COG_simon_kimbangu_political_advisor
		# }
	# }
	# if = { #?
		# limit = { has_country_flag = COG_george_lyndon_carpente_flag }
		# PREV = {
			# set_country_flag = COG_george_lyndon_carpente_flag
		# }
	# }
	# if = { #?
		# limit = { has_country_flag = COG_george_baker_political_advisor }
		# PREV = {
			# set_country_flag = COG_george_baker_political_advisor
		# }
	# }
	# if = { #?
		# limit = { has_country_flag = COG_plant_new_soybean_varieties_flag }
		# PREV = {
			# set_country_flag = COG_plant_new_soybean_varieties_flag
		# }
	# }
	if = {
		limit = { has_country_flag = COG_build_inga_dam_first_flag }
		PREV = {
			set_country_flag = COG_build_inga_dam_first_flag
		}
	}
	if = {
		limit = { has_country_flag = COG_build_inga_dam_second_flag }
		PREV = {
			set_country_flag = COG_build_inga_dam_second_flag
		}
	}
	if = {
		limit = { has_country_flag = COG_build_power_plant_on_inga_dam_first_flag }
		PREV = {
			set_country_flag = COG_build_power_plant_on_inga_dam_first_flag
		}
	}
	if = {
		limit = { has_country_flag = COG_build_power_plant_on_inga_dam_second_flag }
		PREV = {
			set_country_flag = COG_build_power_plant_on_inga_dam_second_flag
		}
	}
	# if = { #?
		# limit = { has_country_flag = COG_surveillance_of_tribes_leaders_flag }
		# PREV = {
			# set_country_flag = COG_surveillance_of_tribes_leaders_flag
		# }
	# }
	# if = { #?
		# limit = { has_country_flag = COG_restore_administrations_in_regions_flag }
		# PREV = {
			# set_country_flag = COG_restore_administrations_in_regions_flag
		# }
	# }
	# if = { #?
		# limit = { has_country_flag = COG_consecrate_country_flag }
		# PREV = {
			# set_country_flag = COG_consecrate_country_flag
		# }
	# }
	# if = { #? (флаг потерялся !)
		# limit = { has_country_flag = COG_consecrate_country_flag }
		# PREV = {
			# set_country_flag = COG_consecrate_country_flag
		# }
	# }
	
	if = {
		limit = { has_dynamic_modifier = { modifier = COG_underdeveloped_tribal_agriculture } }
		PREV = {
			add_dynamic_modifier = { modifier = COG_underdeveloped_tribal_agriculture }
			set_variable = { COG_udta_monthly_population = PREV.COG_udta_monthly_population }
			set_variable = { COG_udta_consumer_goods_factor = PREV.COG_udta_consumer_goods_factor }
			set_variable = { COG_udta_global_building_slots_factor = PREV.COG_udta_global_building_slots_factor }
			set_variable = { COG_udta_production_speed_buildings_factor = PREV.COG_udta_production_speed_buildings_factor }
		}
	}
	if = {
		limit = { has_dynamic_modifier = { modifier = COG_congolese_coffee } }
		PREV = {
			add_dynamic_modifier = { modifier = COG_congolese_coffee }
			set_variable = { COG_cc_army_morale_factor = PREV.COG_cc_army_morale_factor }
			set_variable = { COG_cc_consumer_goods_factor = PREV.COG_cc_consumer_goods_factor }
			set_variable = { COG_cc_production_factory_efficiency_gain_factor = PREV.COG_cc_production_factory_efficiency_gain_factor }
		}
	}
	if = {
		limit = { has_dynamic_modifier = { modifier = COG_export_of_domestic_products } }
		PREV = {
			add_dynamic_modifier = { modifier = COG_export_of_domestic_products }
			set_variable = { COG_edp_political_power_factor = PREV.COG_edp_political_power_factor }
			set_variable = { COG_edp_min_export = PREV.COG_edp_min_export }
		}
	}
	if = {
		limit = { has_dynamic_modifier = { modifier = COG_tropical_diseases } }
		PREV = {
			add_dynamic_modifier = { modifier = COG_tropical_diseases }
			set_variable = { COG_td_monthly_population = PREV.COG_td_monthly_population }
			set_variable = { COG_td_stability_factor = PREV.COG_td_stability_factor }
		}
	}
}

COG_simon_kimbangu_superpowers_update = { #? log !
	# setup
	hidden_effect = {
		if = {
			limit = { check_variable = { COG_faith_in_the_prophet > 90000 } }
			set_temp_variable = { lvl = 3 }
		}
		else_if = {
			limit = { check_variable = { COG_faith_in_the_prophet > 60000 } }
			set_temp_variable = { lvl = 2 }
		}
		else_if = {
			limit = { check_variable = { COG_faith_in_the_prophet > 30000 } }
			set_temp_variable = { lvl = 1 }
		}
		
		if = {
			limit = { has_country_leader_with_trait = COG_simon_kimbangu_goodness_lvl_1 }
			remove_country_leader_trait = COG_simon_kimbangu_goodness_lvl_1
			set_temp_variable = { tier = 1 }
		}
		else_if = {
			limit = { has_country_leader_with_trait = COG_simon_kimbangu_goodness_lvl_2 }
			remove_country_leader_trait = COG_simon_kimbangu_goodness_lvl_2
			set_temp_variable = { tier = 1 }
		}
		else_if = {
			limit = { has_country_leader_with_trait = COG_simon_kimbangu_goodness_lvl_3 }
			remove_country_leader_trait = COG_simon_kimbangu_goodness_lvl_3
			set_temp_variable = { tier = 1 }
		}
		if = { #!
			limit = { has_country_leader_with_trait = COG_simon_kimbangu_aggressiveness_lvl_1 }
			remove_country_leader_trait = COG_simon_kimbangu_aggressiveness_lvl_1
			set_temp_variable = { tier = 2 }
		}
		else_if = {
			limit = { has_country_leader_with_trait = COG_simon_kimbangu_aggressiveness_lvl_2 }
			remove_country_leader_trait = COG_simon_kimbangu_aggressiveness_lvl_2
			set_temp_variable = { tier = 2 }
		}
		else_if = {
			limit = { has_country_leader_with_trait = COG_simon_kimbangu_aggressiveness_lvl_3 }
			remove_country_leader_trait = COG_simon_kimbangu_aggressiveness_lvl_3
			set_temp_variable = { tier = 2 }
		}
		if = { #!
			limit = { has_country_leader_with_trait = COG_simon_kimbangu_diplomaticness_lvl_1 }
			remove_country_leader_trait = COG_simon_kimbangu_diplomaticness_lvl_1
			set_temp_variable = { tier = 3 }
		}
		else_if = {
			limit = { has_country_leader_with_trait = COG_simon_kimbangu_diplomaticness_lvl_2 }
			remove_country_leader_trait = COG_simon_kimbangu_diplomaticness_lvl_2
			set_temp_variable = { tier = 3 }
		}
		else_if = {
			limit = { has_country_leader_with_trait = COG_simon_kimbangu_diplomaticness_lvl_3 }
			remove_country_leader_trait = COG_simon_kimbangu_diplomaticness_lvl_3
			set_temp_variable = { tier = 3 }
		}
	}
	
	# effect_tooltip
	if = {
		limit = { 
			check_variable = { goodness = 1 } 
			NOT = { check_variable = { tier = 1 } check_variable = { lvl = 0 } } 
			check_variable = { var = COG_fitp_goodness value = 2 compare = greater_than_or_equals }
		}
		if = {
			limit = { check_variable = { COG_fitp_goodness > 2 } }
			set_temp_variable = { tier = 1 }
		}
		effect_tooltip = {
			meta_effect = {
				text = {
					COG_simon_kimbangu = { add_country_leader_trait = COG_simon_kimbangu_goodness_lvl_[LVL] }
				}
				LVL = lvl
			}
		}
	}
	else_if = {
		limit = {
			check_variable = { aggressiveness = 1 } 
			NOT = { check_variable = { tier = 2 } check_variable = { lvl = 0 } }
			check_variable = { var = COG_fitp_aggressiveness value = 2 compare = greater_than_or_equals }
		}
		if = {
			limit = { check_variable = { COG_fitp_aggressiveness > 2 } }
			set_temp_variable = { tier = 2 }
		}
		effect_tooltip = {
			meta_effect = {
				text = {
					COG_simon_kimbangu = { add_country_leader_trait = COG_simon_kimbangu_aggressiveness_lvl_[LVL] }
				}
				LVL = lvl
			}
		}
	}
	else_if = {
		limit = { 
			check_variable = { diplomaticness = 1 } 
			NOT = { check_variable = { tier = 3 } check_variable = { lvl = 0 } } 
			check_variable = { var = COG_fitp_diplomaticness value = 2 compare = greater_than_or_equals }
		}
		if = {
			limit = { check_variable = { COG_fitp_diplomaticness > 2 } }
			set_temp_variable = { tier = 3 }
		}
		effect_tooltip = {
			meta_effect = {
				text = {
					COG_simon_kimbangu = { add_country_leader_trait = COG_simon_kimbangu_diplomaticness_lvl_[LVL] }
				}
				LVL = lvl
			}
		}
	}
	
	# effect
	hidden_effect = {
		if = {
			limit = { check_variable = { tier = 1 } NOT = { check_variable = { lvl = 0 } } }
			meta_effect = {
				text = {
					add_country_leader_trait = COG_simon_kimbangu_goodness_lvl_[LVL]
				}
				LVL = lvl
			}
			set_portraits = {
				character = COG_simon_kimbangu
				civilian = { 
					large = "gfx/leaders/COG/Portrait_Simon_Kimbangu_goodness.dds" 
				}
				army = { 
					large = "gfx/leaders/COG/Portrait_Simon_Kimbangu_goodness.dds" 
					small = "gfx/interface/ideas/idea_africa_generic_land_1.dds" #!
				}
			}
		}
		else_if = {
			limit = { check_variable = { tier = 2 } NOT = { check_variable = { lvl = 0 } } }
			meta_effect = {
				text = {
					add_country_leader_trait = COG_simon_kimbangu_aggressiveness_lvl_[LVL]
				}
				LVL = lvl
			}
			set_portraits = {
				character = COG_simon_kimbangu
				civilian = { 
					large = "gfx/leaders/COG/Portrait_Simon_Kimbangu_aggressiveness.dds" #??? !!
				}
				army = { 
					large = "gfx/leaders/COG/Portrait_Simon_Kimbangu_aggressiveness.dds" 
					small = "gfx/interface/ideas/idea_africa_generic_land_1.dds" #!
				}
			}
		}
		else_if = {
			limit = { check_variable = { tier = 3 } NOT = { check_variable = { lvl = 0 } } }
			meta_effect = {
				text = {
					add_country_leader_trait = COG_simon_kimbangu_diplomaticness_lvl_[LVL]
				}
				LVL = lvl
			}
			set_portraits = {
				character = COG_simon_kimbangu
				civilian = { 
					large = "gfx/leaders/COG/Portrait_Simon_Kimbangu_drip.dds" 
				}
				army = { 
					large = "gfx/leaders/COG/Portrait_Simon_Kimbangu_drip.dds" 
					small = "gfx/interface/ideas/idea_africa_generic_land_1.dds" #!
				}
			}
		}
	}
}

COG_poor_education_of_congolese_update = {
	if = {
		limit = { has_idea = COG_poor_education_of_congolese }
		swap_ideas = {
			remove_idea = COG_poor_education_of_congolese
			add_idea = COG_poor_education_of_congolese_1
		}
	}
	else_if = {
		limit = { has_idea = COG_poor_education_of_congolese_1 }
		swap_ideas = {
			remove_idea = COG_poor_education_of_congolese_1
			add_idea = COG_poor_education_of_congolese_2
		}
	}
	else_if = {
		limit = { has_idea = COG_poor_education_of_congolese_2 }
		swap_ideas = {
			remove_idea = COG_poor_education_of_congolese_2
			add_idea = COG_poor_education_of_congolese_3
		}
	}
	else_if = {
		limit = { has_idea = COG_poor_education_of_congolese_3 }
		remove_ideas = COG_poor_education_of_congolese_3
	}
}

COG_destroyed_administrative_institutions_update = {
	if = {
		limit = { has_idea = COG_destroyed_administrative_institutions }
		swap_ideas = {
			remove_idea = COG_destroyed_administrative_institutions
			add_idea = COG_destroyed_administrative_institutions_1
		}
	}
	else_if = {
		limit = { has_idea = COG_destroyed_administrative_institutions_1 }
		swap_ideas = {
			remove_idea = COG_destroyed_administrative_institutions_1
			add_idea = COG_destroyed_administrative_institutions_2
		}
	}
	else_if = {
		limit = { has_idea = COG_destroyed_administrative_institutions_2 }
		remove_ideas = COG_destroyed_administrative_institutions_2
	}
}

COG_add_ai_strategy_antagonize = { #? мб в виде полноценной стратегии ?
	add_ai_strategy = {
		type = antagonize
		id = PREV
		value = 200
	}
	add_ai_strategy = {
		type = conquer
		id = PREV
		value = 100
	}
	add_ai_strategy = {
		type = declare_war
		id = PREV
		value = 100
	}
}

COG_city_rename_effect = {
	set_province_name = {
		id = 5117
		name = kinshasa
	}
	set_province_name = {
		id = 10071
		name = mbandaka
	}
	set_province_name = {
		id = 1950
		name = kisangani
	}
	set_province_name = {
		id = 12907
		name = kalemie
	}
	set_province_name = {
		id = 191
		name = lubumbashi
	}
	hidden_effect = { 
		295 = { set_state_name = kinshasa }
		538 = { set_state_name = mbandaka }
		718 = { set_state_name = kisangani }
		1065 = { set_state_name = lubumbashi }
	}
}

COG_invite_advisors_effect = {
	if = {
		limit = { check_variable = { var = num_advisor value = 1 compare = greater_than_or_equals } }
		random_character = {
			limit = { 
				is_character_slot = political_advisor is_political_advisor = no NOT = { has_character_flag = COG_advisor@PREV has_character_flag = SOV_character_purged_flag has_character_flag = SOV_exiled_flag }
				if = {
					limit = { PREV = { tag = SOV } }
					COG_available_as_an_advisor_SOV = yes
				}
				else_if = {
					limit = { PREV = { tag = SAF } }
					COG_available_as_an_advisor_SAF = yes
				}
			}
			set_nationality = ROOT
			set_character_flag = COG_advisor@PREV
		}
	}
	if = {
		limit = { check_variable = { var = num_advisor value = 2 compare = greater_than_or_equals } }
		random_character = {
			limit = { 
				is_character_slot = political_advisor is_political_advisor = no NOT = { has_character_flag = COG_advisor@PREV has_character_flag = SOV_character_purged_flag has_character_flag = SOV_exiled_flag }
				if = {
					limit = { PREV = { tag = SOV } }
					COG_available_as_an_advisor_SOV = yes
				}
				else_if = {
					limit = { PREV = { tag = SAF } }
					COG_available_as_an_advisor_SAF = yes
				}
			}
			set_nationality = ROOT
			set_character_flag = COG_advisor@PREV
		}
	}
	if = {
		limit = { check_variable = { var = num_advisor value = 3 compare = greater_than_or_equals } }
		random_character = {
			limit = { 
				is_character_slot = political_advisor is_political_advisor = no NOT = { has_character_flag = COG_advisor@PREV has_character_flag = SOV_character_purged_flag has_character_flag = SOV_exiled_flag }
				if = {
					limit = { PREV = { tag = SOV } }
					COG_available_as_an_advisor_SOV = yes
				}
				else_if = {
					limit = { PREV = { tag = SAF } }
					COG_available_as_an_advisor_SAF = yes
				}
			}
			set_nationality = ROOT
			set_character_flag = COG_advisor@PREV
		}
	}
	activate_targeted_decision = { target = ROOT decision = COG_recall_advisors }
}

#

nw_CongoGoogleMapsEvolues_create_list = { #name ?
	if = {
		limit = { check_variable = { nw_CongoGoogleMapsEvolues_highlight_states^0 = 0 } }
		every_state = {
			limit = { has_variable = nw_CongoGoogleMapsEvolues_state_position }
			add_to_variable = { nw_CongoGoogleMapsEvolues_state_position = -80 }
		}
		add_to_variable = { nw_CongoGoogleMapsEvolues_state_position = -80 }
		resize_array = { nw_CongoGoogleMapsEvolues_highlight_states = 1 }
		set_variable = { nw_CongoGoogleMapsEvolues_highlight_states^0 = highlight_state }
	}
	else_if = {
		limit = { NOT = { check_variable = { nw_CongoGoogleMapsEvolues_highlight_states^0 = highlight_state } } }
		resize_array = { nw_CongoGoogleMapsEvolues_highlight_states = 1 }
		set_variable = { nw_CongoGoogleMapsEvolues_highlight_states^0 = highlight_state }
	}
	else = {
		every_state = {
			limit = { has_variable = nw_CongoGoogleMapsEvolues_state_position }
			add_to_variable = { nw_CongoGoogleMapsEvolues_state_position = 80 }
		}
		add_to_variable = { nw_CongoGoogleMapsEvolues_state_position = 80 } 
		clear_array = nw_CongoGoogleMapsEvolues_highlight_states
	}
	add_to_variable = { nw_CongoGoogleMapsEvolues_update = 1 }
}
nw_CongoGoogleMapsEvolues_update_list = { #name ?
	if = {
		limit = { NOT = { check_variable = { nw_CongoGoogleMapsEvolues_highlight_states^1 = highlight_state } } } #?
		resize_array = { nw_CongoGoogleMapsEvolues_highlight_states = 2 } #?
		set_variable = { nw_CongoGoogleMapsEvolues_highlight_states^1 = highlight_state }
	}
	else = {
		remove_from_array = { nw_CongoGoogleMapsEvolues_highlight_states = highlight_state }
	}
	add_to_variable = { nw_CongoGoogleMapsEvolues_update = 1 }
}

COG_add_evolues_in_state = {
	set_temp_variable = { evolues = COG_evolues_gain_var }
	
	clear_temp_array = skills_lvl #?
	add_to_temp_array = { skills_lvl = token:high_skilled }
	add_to_temp_array = { skills_lvl = token:medium_skilled }
	add_to_temp_array = { skills_lvl = token:low_skilled }
	for_each_loop = {
		array = skills_lvl
		value = skill_lvl
		
		set_temp_variable = { _@var:skill_lvl = evolues } # зарандомить ! сделать ограничения !
		multiply_temp_variable = { _@var:skill_lvl = COG_evolues_factor_@var:skill_lvl } #1.65% - high 9,9% - medium
		round_temp_variable = _@var:skill_lvl
		subtract_from_temp_variable = { evolues = _@var:skill_lvl }
	
		add_to_variable = { COG_evolues_count_@var:skill_lvl = _@var:skill_lvl }
		add_to_variable = { ROOT.COG_evolues_count_@var:skill_lvl = _@var:skill_lvl }
		log = "COG_add_evolues_in_state [THIS.GetName] [?_@var:skill_lvl] [?skill_lvl.GetTokenKey]"
	}
	
	set_temp_variable = { evolues = COG_evolues_gain_var }
	COG_evolues_political_counts_update = yes
	
	add_to_variable = { COG_evolues_var = COG_evolues_gain_var }
	add_to_variable = { ROOT.COG_evolues_var = COG_evolues_gain_var }
	
	if = { #?
		limit = { ROOT = { is_ai = no } }
		COG_create_iq_pie_chart = yes
		COG_create_pol_pie_chart = yes
	}
}
COG_evolues_political_counts_update = {
	if = {
		limit = { check_variable = { evolues > 0 } }
		for_each_loop = {
			array = global.ideology_groups
			value = ideology
			
			set_temp_variable_to_random = { var = _@var:ideology min = 0 max = evolues integer = yes }
			add_to_variable = { COG_evolues_count_@var:ideology = _@var:ideology }
			subtract_from_temp_variable = { evolues = _@var:ideology }
			log = "COG_evolues_political_counts_update (plus) [THIS.GetName] [?_@var:ideology] [?ideology.GetTokenKey]"
		}
		if = {
			limit = { check_variable = { evolues > 0 } }
			add_to_variable = { COG_evolues_count_@token:neutrality = evolues }
			log = "COG_evolues_political_counts_update (plus) [THIS.GetName] [?evolues] [?ideology.GetTokenKey] - остаток"
		}
	}
	else = {
		for_each_loop = {
			array = global.ideology_groups
			value = ideology
			multiply_temp_variable = { evolues = -1 }
			
			set_temp_variable_to_random = { var = _@var:ideology min = 0 max = COG_evolues_count_@var:ideology integer = yes }
			clamp_temp_variable = { var = _@var:ideology min = 0 max = evolues }
			subtract_from_variable = { COG_evolues_count_@var:ideology = _@var:ideology }
			
			subtract_from_temp_variable = { evolues = _@var:ideology }
			log = "COG_evolues_political_counts_update (minus) [THIS.GetName] [?_@var:ideology] [?ideology.GetTokenKey]"
		}
		if = { # в теории возможен баг, когда neutrality нет, а другие есть !!
			limit = { check_variable = { evolues > 0 } }
			subtract_from_variable = { COG_evolues_count_@token:neutrality = evolues }
			log = "COG_evolues_political_counts_update (minus) [THIS.GetName] [?evolues] [?ideology.GetTokenKey] - остаток"
		}
	}
}
COG_evolues_skill_counts_update = {
	if = { # засунуть выше ? !
		limit = { check_variable = { evolues > 0 } }
		for_each_loop = {
			array = skills_lvl
			value = skill_lvl
			
			set_temp_variable_to_random = { var = _@var:skill_lvl min = 0 max = evolues integer = yes }
			add_to_variable = { COG_evolues_count_@var:skill_lvl = _@var:skill_lvl }
			add_to_variable = { ROOT.COG_evolues_count_@var:skill_lvl = _@var:skill_lvl }
			
			subtract_from_temp_variable = { evolues = _@var:skill_lvl }
			log = "COG_evolues_skill_counts_update (plus) [THIS.GetName] [?_@var:skill_lvl] [?skill_lvl.GetTokenKey]"
		}
		if = {
			limit = { check_variable = { evolues > 0 } }
			add_to_variable = { COG_evolues_count_@token:low_skilled = evolues }
			add_to_variable = { ROOT.COG_evolues_count_@token:low_skilled = evolues }
			log = "COG_evolues_skill_counts_update (plus) [THIS.GetName] [?evolues] [?skill_lvl.GetTokenKey] - остаток"
		}
	}
	else = {
		for_each_loop = {
			array = skills_lvl
			value = skill_lvl
			multiply_temp_variable = { evolues = -1 }
			
			set_temp_variable_to_random = { var = _@var:skill_lvl min = 0 max = COG_evolues_count_@var:skill_lvl integer = yes } #?
			clamp_temp_variable = { var = _@var:skill_lvl min = 0 max = evolues }
			subtract_from_variable = { COG_evolues_count_@var:skill_lvl = _@var:skill_lvl }
			subtract_from_variable = { ROOT.COG_evolues_count_@var:skill_lvl = _@var:skill_lvl }
			
			subtract_from_temp_variable = { evolues = _@var:skill_lvl }
			log = "COG_evolues_skill_counts_update (minus) [THIS.GetName] [?_@var:skill_lvl] [?skill_lvl.GetTokenKey]"
		}
		if = { # в теории возможен баг, когда low_skilled нет, а другие есть !!
			limit = { check_variable = { evolues > 0 } }
			subtract_from_variable = { COG_evolues_count_@token:low_skilled = evolues }
			subtract_from_variable = { ROOT.COG_evolues_count_@token:low_skilled = evolues }
			log = "COG_evolues_skill_counts_update (minus) [THIS.GetName] [?evolues] [?skill_lvl.GetTokenKey] - остаток"
		}
	}
}
COG_create_iq_pie_chart = {
	clear_temp_array = skills_lvl
	add_to_temp_array = { skills_lvl = token:low_skilled }
	add_to_temp_array = { skills_lvl = token:medium_skilled }
	add_to_temp_array = { skills_lvl = token:high_skilled }
	set_temp_variable = { evolues = COG_evolues_var }
	for_each_loop = {
		array = skills_lvl
		value = skill_lvl
		
		set_temp_variable = { _@var:skill_lvl = COG_evolues_count_@var:skill_lvl } #?
		divide_temp_variable = { _@var:skill_lvl = evolues }
		
		set_variable = { COG_evolues_pie_@var:skill_lvl = _@var:skill_lvl } # This is where the variable is set, put the correct value here and rename the var
		multiply_variable = { COG_evolues_pie_@var:skill_lvl = 100 }
		round_variable = COG_evolues_pie_@var:skill_lvl
		set_variable = { COG_evolues_percent_@var:skill_lvl = COG_evolues_pie_@var:skill_lvl }
		
		if = {
			limit = { check_variable = { i > 0 } }
			set_temp_variable = { prev_i = i }
			subtract_from_temp_variable = { prev_i = 1 }
			
			set_temp_variable = { prev_skill_lvl = global.skills_lvl^prev_i }
			add_to_variable = { COG_evolues_pie_@var:skill_lvl = COG_evolues_pie_@var:prev_skill_lvl }
			# log = "COG_create_iq_pie_chart [THIS.GetName] [?prev_skill_lvl.GetTokenKey] - prev [?COG_evolues_pie_@var:prev_skill_lvl] - add"
		}
		log = "COG_create_iq_pie_chart [THIS.GetName] [?skill_lvl.GetTokenKey] [?COG_evolues_count_@var:skill_lvl] / [?evolues] : [?_@var:skill_lvl] ([?COG_evolues_pie_@var:skill_lvl]%)"
	}
}
COG_create_pol_pie_chart = {
	set_temp_variable = { evolues = COG_evolues_var }
	for_each_loop = {
		array = global.ideology_groups
		value = ideology
		index = i
		
		set_temp_variable = { _@var:ideology = COG_evolues_count_@var:ideology } #?
		divide_temp_variable = { _@var:ideology = evolues }
		
		set_variable = { COG_evolues_pie_@var:ideology = _@var:ideology } # This is where the variable is set, put the correct value here and rename the var
		multiply_variable = { COG_evolues_pie_@var:ideology = 100 }
		round_variable = COG_evolues_pie_@var:ideology
		set_variable = { COG_evolues_percent_@var:ideology = COG_evolues_pie_@var:ideology }
		
		if = {
			limit = { check_variable = { i > 0 } }
			set_temp_variable = { prev_i = i }
			subtract_from_temp_variable = { prev_i = 1 }
			
			set_temp_variable = { prev_ideology = global.ideology_groups^prev_i }
			add_to_variable = { COG_evolues_pie_@var:ideology = COG_evolues_pie_@var:prev_ideology }
			# log = "COG_create_pol_pie_chart [THIS.GetName] [?prev_ideology.GetTokenKey] - prev [?COG_evolues_pie_@var:prev_ideology] - add"
		}
		log = "COG_create_pol_pie_chart [THIS.GetName] [?ideology.GetTokenKey] [?COG_evolues_count_@var:ideology] / [?evolues] : [?_@var:ideology] ([?COG_evolues_pie_@var:ideology]%)"
	}
}

nw_CongoGoogleMapsEvolues_clear_var = {
	set_variable = { ROOT.COG_ei_stability_factor = 0 } #?
	set_variable = { ROOT.COG_ei_political_power_factor = 0 }
	set_variable = { ROOT.COG_ei_industrial_capacity_factory = 0 }
	set_variable = { ROOT.COG_ei_production_speed_buildings_factor = 0 }
	set_variable = { ROOT.COG_ei_production_factory_max_efficiency_factor = 0 }
	set_variable = { ROOT.COG_ei_research_speed_factor = 0 }
	
	set_variable = { ROOT.COG_ei_democratic_drift = 0 }
	set_variable = { ROOT.COG_ei_communism_drift = 0 }
	set_variable = { ROOT.COG_ei_fascism_drift = 0 }
	set_variable = { ROOT.COG_ei_neutrality_drift = 0 }
	set_variable = { ROOT.COG_ei_technocracy_drift = 0 }
	set_variable = { ROOT.COG_ei_trozkism_drift = 0 }
	set_variable = { ROOT.COG_ei_monarchy_drift = 0 }
	set_variable = { ROOT.COG_ei_anarchism_drift = 0 }
	set_variable = { ROOT.COG_ei_drift_defence_factor = 0 }
}

nw_CongoGoogleMapsEvolues_set_bonus_in_state = {
	for_each_loop = {
		array = skills_lvl
		value = skill_lvl
		
		set_temp_variable = { _@var:skill_lvl = COG_evolues_count_@var:skill_lvl }
		divide_temp_variable = { _@var:skill_lvl = 100000 }
		
		if = {
			limit = { check_variable = { skill_lvl = token:low_skilled } }
			set_variable = { COG_ei_stability_factor = _@var:skill_lvl } #?
			set_variable = { COG_ei_political_power_factor = _@var:skill_lvl }
		}
		else_if = {
			limit = { check_variable = { skill_lvl = token:medium_skilled } }
			set_variable = { COG_ei_industrial_capacity_factory = _@var:skill_lvl }
			set_variable = { COG_ei_production_speed_buildings_factor = _@var:skill_lvl }
		}
		else_if = {
			limit = { check_variable = { skill_lvl = token:high_skilled } }
			set_variable = { COG_ei_production_factory_max_efficiency_factor = _@var:skill_lvl }
			set_variable = { COG_ei_research_speed_factor = _@var:skill_lvl }
		}
	}

	for_each_loop = {
		array = global.ideology_groups
		value = ideology
		
		set_temp_variable = { _@var:ideology = COG_evolues_count_@var:ideology }
		divide_temp_variable = { _@var:ideology = 100000 }
		if = {
			limit = { ROOT = { has_government = var:ideology } } #!!
			set_variable = { COG_ei_drift_defence_factor = _@var:ideology }
		}
		else = { 
			meta_effect = {
				text = { set_variable = { COG_ei_[IDEOLOGY]_drift = _@var:ideology } }
				IDEOLOGY = "[?ideology.GetTokenKey]"
			}
		}
	}
}

nw_CongoGoogleMapsEvolues_set_bonus_ROOT = { #?
	add_to_variable = { ROOT.COG_ei_stability_factor = THIS.COG_ei_stability_factor } #?
	add_to_variable = { ROOT.COG_ei_political_power_factor = THIS.COG_ei_political_power_factor }
	
	add_to_variable = { ROOT.COG_ei_industrial_capacity_factory = THIS.COG_ei_industrial_capacity_factory }
	add_to_variable = { ROOT.COG_ei_production_speed_buildings_factor = THIS.COG_ei_production_speed_buildings_factor }
	
	add_to_variable = { ROOT.COG_ei_production_factory_max_efficiency_factor = THIS.COG_ei_production_factory_max_efficiency_factor }
	add_to_variable = { ROOT.COG_ei_research_speed_factor = THIS.COG_ei_research_speed_factor }
	
	add_to_variable = { ROOT.COG_ei_democratic_drift = THIS.COG_ei_democratic_drift }
	add_to_variable = { ROOT.COG_ei_communism_drift = THIS.COG_ei_communism_drift }
	add_to_variable = { ROOT.COG_ei_fascism_drift = THIS.COG_ei_fascism_drift }
	add_to_variable = { ROOT.COG_ei_neutrality_drift = THIS.COG_ei_neutrality_drift }
	add_to_variable = { ROOT.COG_ei_technocracy_drift = THIS.COG_ei_technocracy_drift }
	add_to_variable = { ROOT.COG_ei_trozkism_drift = THIS.COG_ei_trozkism_drift }
	add_to_variable = { ROOT.COG_ei_monarchy_drift = THIS.COG_ei_monarchy_drift }
	add_to_variable = { ROOT.COG_ei_anarchism_drift = THIS.COG_ei_anarchism_drift }
	add_to_variable = { ROOT.COG_ei_drift_defence_factor = THIS.COG_ei_drift_defence_factor }
	
	multiply_variable = { ROOT.COG_ei_stability_factor = COG_evolues_bonus_coeff } #?
	multiply_variable = { ROOT.COG_ei_political_power_factor = COG_evolues_bonus_coeff }
	multiply_variable = { ROOT.COG_ei_industrial_capacity_factory = COG_evolues_bonus_coeff }
	multiply_variable = { ROOT.COG_ei_production_speed_buildings_factor = COG_evolues_bonus_coeff }
	multiply_variable = { ROOT.COG_ei_production_factory_max_efficiency_factor = COG_evolues_bonus_coeff }
	multiply_variable = { ROOT.COG_ei_research_speed_factor = COG_evolues_bonus_coeff }
	multiply_variable = { ROOT.COG_ei_democratic_drift = COG_evolues_bonus_coeff }
	multiply_variable = { ROOT.COG_ei_communism_drift = COG_evolues_bonus_coeff }
	multiply_variable = { ROOT.COG_ei_fascism_drift = COG_evolues_bonus_coeff }
	multiply_variable = { ROOT.COG_ei_neutrality_drift = COG_evolues_bonus_coeff }
	multiply_variable = { ROOT.COG_ei_technocracy_drift = COG_evolues_bonus_coeff }
	multiply_variable = { ROOT.COG_ei_trozkism_drift = COG_evolues_bonus_coeff }
	multiply_variable = { ROOT.COG_ei_monarchy_drift = COG_evolues_bonus_coeff }
	multiply_variable = { ROOT.COG_ei_anarchism_drift = COG_evolues_bonus_coeff }
	multiply_variable = { ROOT.COG_ei_drift_defence_factor = THIS.COG_evolues_bonus_coeff }
	
	ROOT = { 
		force_update_dynamic_modifier = yes
	}
	log = "nw_CongoGoogleMapsEvolues_set_bonus_ROOT [THIS.GetName] (bonus_coeff: [?COG_evolues_bonus_coeff])"
}

nw_CongoGoogleMapsEvolues_MinusEvoluesThatIdeology = {
	random_owned_controlled_state = { #?
		limit = { check_variable = { COG_evolues_count_@var:ideology > 0 } }
		set_temp_variable = { Limit = COG_evolues_count_@var:ideology }
		divide_temp_variable = { Limit = ROOT.COG_evolues_limit_on_repression } #?
		multiply_temp_variable = { Limit = -1 }
		
		set_temp_variable_to_random = { var = evolues min = Limit max = 0 integer = yes } #-1
		add_to_variable = { COG_evolues_count_@var:ideology = evolues tooltip = COG_minus_ideology_evolues_tooltip } #name??
		add_to_variable = { COG_evolues_var = evolues }
		add_to_variable = { ROOT.COG_evolues_var = evolues }
		add_to_temp_array = { skills_lvl = token:high_skilled }
		add_to_temp_array = { skills_lvl = token:medium_skilled }
		add_to_temp_array = { skills_lvl = token:low_skilled }
		COG_evolues_skill_counts_update = yes
		
		COG_create_iq_pie_chart = yes
		COG_create_pol_pie_chart = yes
	}
	add_to_variable = { nw_CongoGoogleMapsEvolues_update = 1 } #?
}